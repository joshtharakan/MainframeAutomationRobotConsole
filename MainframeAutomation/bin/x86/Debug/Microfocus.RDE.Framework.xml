<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microfocus.RDE.Framework</name>
    </assembly>
    <members>
        <member name="T:MicroFocus.RDE.Framework.IRDEField">
            <summary>
            Represents properties of specific field in screen.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.attributes">
            <summary>
            Gets the attributes collection of the currnet field.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.Dup">
            <summary>
            Gets a value that indicates if this field has the Dup attribute.
            A field with the Dup attribute repeats hex 1C from the cursor position to the end of the field when the user presses the Dup key; this shows on the display as an asterisk.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.Enptui">
            <summary>
            Gets a value that indicates if the current field attribute is within an ENPTUI structured field.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.Type">
            <summary>
            Gets a value that indicates the type of characters that can be entered in the field.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.AutoEnter">
            <summary>
            Gets a value that indicates if the field is Auto Enter. 
            If true, contents are sent to the host when the user either types a character in the last position of the field or presses the field exit key. 
            The user does not have to press the enter key.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.Detectable">
            <summary>
            Gets a value that indicates if this field has the Detectable attribute. 
            A field with the Detectable attribute can be detected by the selector pen or the cursor select key.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.EndColumn">
            <summary>
            Gets a value that indicates the ending column of the field.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.EndRow">
            <summary>
            Gets a value that indicates the ending row of the field.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.Hidden">
            <summary>
            Gets a value that indicates if the field is hidden.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.Length">
            <summary>
            Gets a value that specifies the length of the field. 
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.Protected">
            <summary>
            Gets a value that indicates if the field can accept input.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.StartColumn">
            <summary>
            Gets a value that indicates the column in which the field begins. 
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.StartPosition">
            <summary>
            Gets a value that indicates the starting position of the field as a presentation space position.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.StartRow">
            <summary>
            Gets a value that indicates the row in which the field begins.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.Text">
            <summary>
            Gets or sets the text that appears in the field.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.FieldExitRequired">
            <summary>
            Gets a value that indicates if the user is required to press field exit after entering the last character.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.ModifiedDataTag">
            <summary>
            Gets a value that indicates if the field has a Modified Data Tag attribute which indicates if the field was modified by the user. 
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.AutoSkip">
            <summary>
            Gets a value that indicates if this field has the Autoskip attribute. A field with the Autoskip attribute causes the cursor to skip over fields that are defined as protected and numeric. 
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEField.Intense">
            <summary>
            Gets a value that indicates if this field has the Intense attribute. A field with the Intense attribute is displayed with brighter intensity.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDEAttributes">
            <summary>
            Represents Collection of attributes.
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEAttributes.AttributeAtPosition(System.Int32,System.Int32)">
            <summary>
            AttributeAtPosition returns a reference to an Attribute object based on the provided row and column coordinates.
            </summary>
            <param name="row">The screen position row.</param>
            <param name="col">The screen position column.</param>
            <returns> A reference to an IRDEAttribute interface.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEAttributes.Count">
            <summary>
            Gets the number of Attribute objects in the collection.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEAttributes.Item(System.Int32)">
            <summary>
            Gets an Attribute object by position.
            </summary>
            <param name="index">The position of a member of the collection.</param>
            <returns> Returns an IRDEAttribute object.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="!:IndexOutOfRangeException"></exception>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDEHLLAPI">
            <summary>
            Represents properties, methods and events of HLLAPI object.
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEHLLAPI.FileTransferProgress(System.Int32)">
            <summary>
            Indicates that a file transfer is in progress. 
            </summary>
            <param name="bytesCopied">The number of bytes copied up to the time of the last file transfer update.</param>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEHLLAPI.ContainerActivated(System.Int32,System.Int32)">
            <summary>
            Sets a OBJECTX HLLAPI control state to indicate if the container is activated or not.
            </summary>
            <param name="newState">Specifies if the container is activated or deactivated. This value corresponds exactly to the LOWORD value of the wParam in the Windows WM_ACTIVATE message.</param>
            <param name="containerWnd">The handle for the container window.</param>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEHLLAPI.HostKeyPress2(System.String)">
            <summary>
            Forwards information to indicate that the host user has pressed and released an ANSI key.
            </summary>
            <param name="keystroke">The host keystroke.</param>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEHLLAPI.Web2Host(System.Boolean)">
            <summary>
            Sets the Web2Host toggle state. 
            </summary>
            <param name="web2Host">If Web2Host is enabled, it contains true. It is false by default.</param>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEHLLAPI.Configure">
            <summary>
            Sets up the OBJECTX HLLAPI control for operation.
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEHLLAPI.HllApi(MicroFocus.RDE.Framework.HLLAPIFunctions,System.String@,System.Int16@,System.Int16@)">
            <summary>
            Submits a EHLLAPI/HLLAPI or DDE API function call from the client application to the host.
            </summary>
            <param name="function">The EHLLAPI/HLLAPI or DDE API function to call.</param>
            <param name="data">The data string that is part of the HLLAPI function.</param>
            <param name="length">The length, in bytes, of the data string.</param>
            <param name="position">The relative position in the presentation space, if applicable.</param>
            <returns>A HLLAPI return code from the HLLAPI specification.</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEHLLAPI.HostKeypress(System.String@)">
            <summary>
            Forwards information to indicate that the host user has pressed and released an ANSI key.
            </summary>
            <param name="keystroke">The host keystroke.</param>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEHLLAPI.HostScreenChange">
            <summary>
            Indicates that the host screen has changed.
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEHLLAPI.HostStatusLineChange">
            <summary>
            Indicates that the Operator Information Area (OIA) status line has changed.
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEHLLAPI.HostAfterConnect">
            <summary>
            Indicates that the OBJECTX HLLAPI control has connected to the host.
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEHLLAPI.HostKeyboardLock(System.Boolean)">
            <summary>
            Sets a hidden HostKeyboardLock property within the HLLAPI Control to True or False and is used to notify the control of the session state change on the host.
            </summary>
            <param name="bLock"></param>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEHLLAPI.HostReadyToSend(System.Boolean)">
            <summary>
            Indicates that the host is ready to send data. (READY in the status line.)
            </summary>
            <param name="ready"></param>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEHLLAPI.RequestShutdown">
            <summary>
            Indicates if shutdown is enabled for the OBJECTX HLLAPI control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEHLLAPI.FileTransferComplete(System.Int32,System.Int32)">
            <summary>
            Indicates that a file transfer is complete. 
            </summary>
            <param name="transferResult"></param>
            <param name="transferCode"></param>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHLLAPI.ShortName">
            <summary>
            Gets or sets an EHLAPPI/HLAPPI short name.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHLLAPI.ClientConnected">
            <summary>
            Gets a value indicating if the application is connected to the host.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHLLAPI.BroadcastMessage">
            <summary>
            Returns or sets a value indicating whether the HLLAPI control broadcasts an APISessionActivate message when the user switches from one EHLLAPI session to another. 
            This can be used when one application must respond to several RUMBA sessions.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHLLAPI.ConvertNulls">
            <summary>
            Gets or sets a value indicating whether the HLLAPI control converts nulls to spaces in the method or event call.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHLLAPI.OEMToANSI">
            <summary>
            Gets or sets a value indicating whether the OBJECTX HLLAPI control converts OEM keystrokes to ANSI format.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHLLAPI.DDETopic">
            <summary>
            Gets or sets the name of the Dynamic Data Exchange (DDE) topic.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHLLAPI.DDEServer">
            <summary>
            Gets or sets the name of the EHLAPPI/HLAPPI or Dynamic Data Exchange (DDE) server.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHLLAPI.CopyStringTruncate">
            <summary>
            Gets or sets a value indicating whether the OBJECTX HLLAPI control truncates strings copied from the screen.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHLLAPI.SearchBackPosition">
            <summary>
            Gets or sets a value indicating whether the OBJECTX HLLAPI control searches back from a specified position. 
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHLLAPI.KeyPSUpdate">
            <summary>
            Gets or sets a value indicating whether the OBJECTX HLLAPI control updates the screen on each keystroke. 
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHLLAPI.ContainerHwnd">
            <summary>
            Gets or sets a value indicating the handle of the container window.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHLLAPI.StandAlone">
            <summary>
            Sets and retrieves a Boolean value specifying whether or not to run in stand alone mode.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHLLAPI.EHLDLLName">
            <summary>
            Sets and retrieves a string specifying the name of the 32-bit EHLLAPI DLL.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHLLAPI.WHLDLLName">
            <summary>
            Sets and retrieves a string specifying the name of the WHLLAPI (Windows HLLAPI) DLL.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHLLAPI.DeleteSession">
            <summary>
            Gets or sets a value that indicates whether to delete the current RUMBA session if a duplicate short name is already in use.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHLLAPI.HllapiStandard">
            <summary>
            Sets and retrieves a Boolean value that indicates whether to use the 16-bit HLLAPI data structure when running a 32-bit HLLAPI application.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHLLAPI.HllapiMulSession">
            <summary>
            
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.RequestHostStatusLine">
            <summary>
            Notifies the container to retrieve the host Operator Information Area (OIA) status line. (Before the CopyOIA function, for example.)
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.UpdateHostScreenText">
            <summary>
            Notifies the container to update the host screen text.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.RequestHostScreenText">
            <summary>
            Notifies the container to retrieve the contents of the host screen.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.RequestHostScreenAttributes">
            <summary>
            Notifies the container to retrieve the character attributes of each position on the host screen.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.RequestHostFields">
            <summary>
            Notifies the container to retrieve a HostFields object. Use this event before you copy data into the field or query the field attributes.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.RequestHostInfo">
            <summary>
            Notifies the container to retrieve host screen information.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.SendHostKeys">
            <summary>
            Notifies the container to send codes for pre-translated function keys to the host.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.RequestHostCursorPosition">
            <summary>
            Notifies the container to retrieve the position of the host screen cursor.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.UpdateHostCursorPosition">
            <summary>
            Notifies the container to update the host cursor position.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.RequestHostSelectionPosition">
            <summary>
            Notifies the container to retrieve the position of a host screen selection rectangle.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.UpdateHostSelectionPosition">
            <summary>
            Notifies the container to update the position of a host screen selection rectangle. 
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.RequestHostSelectionText">
            <summary>
            Notifies the container to retrieve the contents of a host screen selection rectangle.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.UpdateHostSelectionText">
            <summary>
            Notifies the container to update the contents of a host screen selection rectangle.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.ContainerClose">
            <summary>
            Notifies the container to cease its operation. 
            This would be used at shutdown and functions only if the application is not embedded in the container.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.LockUserInput">
            <summary>
            Notifies the container that user input is disabled (for example, when the host is not ready).
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.RunMacro">
            <summary>
            Notifies the container to run a keyboard macro. 
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.RequestHostBoundState">
            <summary>
            Notifies the container to retrieve the state of the binding between the OBJECTX Display control and the host.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.RequestHostBusyState">
            <summary>
            Notifies the container to retrieve the data processing state of the host.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.RequestHostKeyboardLockState">
            <summary>
            Notifies the container to retrieve the state of the host keyboard. (Before using a SendKey, for example.)
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.RequestHostConnectState">
            <summary>
            Notifies the container to retrieve the state of the host connection.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.RequestHostFontHeight">
            <summary>
            Notifies the container to retrieve the host screen font height. This height depends on the current Microsoft Windows font unit.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.RequestHostFontWidth">
            <summary>
            Notifies the container to retrieve the host screen font width. This width depends on the current Microsoft Windows font unit.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.ConvertHostRectangle">
            <summary>
            Notifies the container to convert a selection rectangle from window coordinates (in pixels) to Display (col/row) – or vice versa.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.RequestHostPointerPosition">
            <summary>
            Notifies the container to retrieve the position of the mouse pointer on the host screen.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.RequestHostControlWnd">
            <summary>
            Notifies the container to retrieve the handle of the host display window.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.CancelFileTransfer">
            <summary>
            Notifies the container (OBJECTX Display control) to cancel the current file transfer.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.SendFile">
            <summary>
            Notifies the container to send a pre-translated data stream to the host.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.ReceiveFile">
            <summary>
            Notifies the container to receive a data file from the host. 
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEHLLAPI.RequestHostFTXEnvironment">
            <summary>
            Notifies the container to retrieve the host file transfer environment.
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEExtendedScreenIDs.GetScreenIDs">
            <summary>
            Retunrs XML of all screen IDs
            </summary>
            <returns>XML containing all screen IDs</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEExtendedScreenIDs.Add(System.Xml.XmlNode)">
            <summary>
            Add a new single screen Id
            </summary>
            <param name="screenId">All screen ID related info</param>
            <returns>true on success, false otherwise</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEExtendedScreenIDs.AddMultiple(System.Xml.XmlNode)">
            <summary>
            Add a group of screen Ids
            </summary>
            <param name="screenId">All screen IDs related info</param>
            <returns>true on success, false otherwise</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEExtendedScreenIDs.Add(System.Int32,System.String)">
            <summary>
            Add a new screen Id with text location condition
            </summary>
            <param name="screenId">numeric identifier of the screen</param>
            <param name="screenName">Screen name</param>
            <returns>true on success, false otherwise</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEExtendedScreenIDs.Add(System.Int32,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Add a new screen Id with text location condition
            </summary>
            <param name="screenId">numeric identifier of the screen</param>
            <param name="screenName">Screen name</param>
            <param name="row">start row of text to search</param>
            <param name="col">start column of text to search</param>
            <param name="text">text to search</param>
            <returns>true on success, false otherwise</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEExtendedScreenIDs.RemoveById(System.Int32)">
            <summary>
            Remove screen ID by its numeric id
            </summary>
            <param name="screenId">Numeric key of screen to remove</param>
            <returns>true on success, false otherwise</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEExtendedScreenIDs.RemoveByName(System.String)">
            <summary>
            Remove screen ID by its name
            </summary>
            <param name="screenName">screen name to remove</param>
            <returns>true on success, false otherwise</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEExtendedScreenIDs.GetById(System.Int32)">
            <summary>
            Get screen ID by its numeric id
            </summary>
            <param name="screenId">Numeric key of screen</param>
            <returns>IRDEExtendedScreenIDs interface</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEExtendedScreenIDs.GetByName(System.String)">
            <summary>
            Get screen ID by its name
            </summary>
            <param name="screenName">screen name</param>
            <returns>IRDEExtendedScreenIDs interface</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEExtendedScreenIDs.UpdateScreenId(System.Xml.XmlNode)">
            <summary>
            Update an existing screen ID
            </summary>
            <param name="screenId">New screen ID</param>
            <returns>true on success, false otherwise</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEExtendedScreenIDs.GetScreenName(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Return a the screen name a given screen
            </summary>
            <param name="screenId">Numeric screen id of the screen</param>
            <param name="screenText">screen's text</param>
            <param name="rows">Number of screen rows</param>
            <param name="cols">Number of screen columns</param>
            <returns>If an extended screen ID found - its name is returned, otherwise, empty string</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEExtendedScreenIDs.GetEnumerator">
            <summary>
            Implements enumerator over the collection
            </summary>
            <returns>enumerator object over the collection</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEExtendedScreenIDs.Rename(System.String,System.String)">
            <summary>
            Rename extended screen ID Name
            </summary>
            <param name="name">old name</param>
            <param name="newName">new name</param>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEExtendedScreenIDs.GetScreenTextLocations(System.String)">
            <summary>
            Gets the TextLocation conditions for a specific screen name
            </summary>
            <param name="screenName">the requested screen name</param>
            <returns></returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEExtendedScreenIDs.GetScreenIDByName(System.String)">
            <summary>
            Gets the screenID of the specified extended screen ID
            </summary>
            <param name="screenName">the screen name to search</param>
            <returns>If an extended screen ID found - its ID (number) is returned, otherwise, null</returns>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEExtendedScreenIDs.Count">
            <summary>
            Total Number of screen IDs objects
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEExtendedScreenIDs.ESIDSynchKey">
            <summary>
            Key which synchronize the ESID of all sessions, which hold the same key, to be the same. 
            If key is empty string no synch will be done.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEExtendedScreenIDs.ExtendedScreenIDMatched">
            <summary>
            Occurs when extended screen id is found for current screen
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDETracer">
            <summary>
            The Tracer object provides tracing capabilities to all properties, methods and events of the 
            Mainframe, AS400, HP and Unix displays.
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDETracer.TraceStart">
            <summary>
            Starts the Tracer object.
            Information will be traced for all properties, methods and events of the 
            Mainframe, AS400, HP and Unix displays.
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDETracer.TraceStop">
            <summary>
            Stops the Tracer object.
            Information will not be traced.
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDETracer.TraceInfo(System.String)">
            <summary>
            Inserts a comment to the trace output.
            </summary>
            <param name="data">The comment to be added to the tracer.</param>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDETracer.Active">
            <summary>
            Gets the Tracer object's state.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDETracer.Location">
            <summary>
            Gets the Tracer object's output location.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDECharProperties">
            <summary>
            Represents character properties of specific position in screen
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDECharProperties.CharSet">
            <summary>
            Gets a value that specifies the host character set used at the screen position.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDECharProperties.Transparency">
            <summary>
            Gets a value that indicates the Transparency character attribute. 
            It can also be an extended field attribute. 
            The Transparency attribute determines the how the background behind the character looks.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDECharProperties.BackGroundColorAttribute">
            <summary>
            Gets the background color attribute of the character location.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDECharProperties.ForeGroundColorAttribute">
            <summary>
            Gets the foreground color attribute of the character location.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDECharProperties.BackGroundColor">
            <summary>
            Gets the background color of the character location.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDECharProperties.ForeGroundColor">
            <summary>
            Gets the foreground color of the character location.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDECharProperties.Blinking">
            <summary>
            Gets the value that indicates if the character location displays as blinking.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDECharProperties.Bold">
            <summary>
            Gets the value that indicates if text in the character location displays as bold
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDECharProperties.Column">
            <summary>
            Gets a value indicating to which column the current attribute applies.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDECharProperties.ColumnSeparator">
            <summary>
            Gets a value that indicates if the screen position is a column separator.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDECharProperties.Row">
            <summary>
            Gets a value indicating to which row the current attribute applies. 
            It must be used in conjuction with the Column property to define a position since an attribute does not apply to a whole row.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDECharProperties.Underlined">
            <summary>
            Gets a value that indicates if the text in the location displays as underlined.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDECharProperties.ReverseVideo">
            <summary>
            Gets a value that indicates whether the screen position displays in reverse video with the background and foreground colors reversed.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.CollectDataOnHostScreenChangeEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:MicroFocus.RDE.Framework.CollectDataOnHostScreenChangeEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.CollectDataOnSendDataEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:MicroFocus.RDE.Framework.CollectDataOnSendDataEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.CollectDataOnDisplayColorChangeEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:MicroFocus.RDE.Framework.CollectDataOnDisplayColorChangeEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IMainframeDisplay">
            <summary>
            
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDEDisplay">
            <summary>
            Reperesents all common properties, methods and events which are splited to interaces according to category.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplay.IRDEConnection">
            <summary>
            Gets common properties, methods and events of connection interface.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplay.IRDEDisplayProp">
            <summary>
            Gets common properties, methods and events of display attributes interface.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplay.IRDESession">
            <summary>
            Gets common properties, methods and events of session interface.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplay.IRDEClipboard">
            <summary>
            Gets common properties, methods and events of clipboard interface.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplay.IRDEKeyboard">
            <summary>
            Gets common properties, methods and events of keyboard interface.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplay.IRDEMacro">
            <summary>
            Gets common properties, methods and events of macro interface.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplay.IRDEHllapi">
            <summary>
            Gets common properties, methods and events of hllapi interface.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplay.IRDETracer">
            <summary>
            Gets common properties, methods and events of tracer interface.
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IMainframeDisplay.GetMFObject">
            <summary>
            Gets a reference to current MainFrame object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IMainframeDisplay.UnregisterSubDecoder(System.Object)">
            <summary>
            UnregisterSubDecoder removes the registration of a structured field subdecoder.
            </summary>
            <param name="decoder"> The name of a structured field subdecoder.</param>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IMainframeDisplay.RegisterSubDecoder(System.Object)">
            <summary>
            RegisterSubDecoder registers a structured field subdecoder.
            </summary>
            <param name="decoder">The name of a structured field subdecoder.</param>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IMainframeDisplay.TranslateString(System.String,MicroFocus.RDE.Framework.StringTranslationConstants)">
            <summary>
            TranslateString translates a string from one character set to another specified character set.
            </summary>
            <param name="stringBuffer">A reference to the buffer that contains the characters to translate.</param>
            <param name="translationDirection">A value indicating the direction of the transfer.</param>
            <returns>The translated character.</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IMainframeDisplay.GetFieldsAndCharacters(MicroFocus.RDE.Framework.IRDEFieldProperties[]@,MicroFocus.RDE.Framework.IRDECharProperties[]@,System.String[]@)">
            <summary>
            Returns static arrays of fields, characters and texts which represent the current screen.
            </summary>
            <param name="fields">Array of IRDEFieldProperties of all the fields in the current screen.</param>
            <param name="characters">Array of IRDECharProperties of all the characters in the current screen.</param>
            <param name="text">Array of all the texts in the current screen according to fields.</param>
            <returns></returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IMainframeDisplay.IRDEFTX">
            <summary>
            Gets reference to MainFrame FTX inteface.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IMainframeDisplay.AutoFont">
            <summary>
            Gets or sets a value that specifies whether automatic font sizing is enabled
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IMainframeDisplay.FontTypeFace">
            <summary>
            Gets or sets a string value that specifies the face name of the currently selected display font. 
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IMainframeDisplay.FontPointSize">
            <summary>
            Gets or sets a long integer value that specifies the point size of the currently selected display font.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IMainframeDisplay.TN3270HostsList">
            <summary>
            Gets a reference to MainFrame Hosts List collection.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IMainframeDisplay.HostIPAddress">
            <summary>
            Returns a string value that specifies the host IP address.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IMainframeDisplay.StartupModelType">
            <summary>
            Gets or sets the type for the startup display model for the display or the startup printer model for the printer.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IMainframeDisplay.AutoReconnect">
            <summary>
            Gets or sets a value that determines whether the control attempts to reconnect automatically when the connection is broken.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IMainframeDisplay.HostDeviceName">
            <summary>
            Gets or sets the name of the device to which the workstation will connect.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IMainframeDisplay.AutoResetKeyboard">
            <summary>
            Gets or sets a value indicating whether Auto Reset is enabled.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IMainframeDisplay.BindState">
            <summary>
            Gets a value that indicates the host bind state.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IMainframeDisplay.IRDEExtendedScreenIDs">
            <summary>
            Gets a value of the extended screen IDs held by the session
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IMainframeDisplay.BaseColorsMode">
            <summary>
            Returns or sets the display Base Colors Mode: Four Colors, Two Colors, Black on White or White on Black.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IMainframeDisplay.CollectDataOnHostScreenChange">
            <summary>
            Occurs when the display receives data from the host.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IMainframeDisplay.CollectDataOnSendDataEvent">
            <summary>
            Occurs when the Display control is sending data. 
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IMainframeDisplay.CollectDataOnDisplayColorChange">
            <summary>
            Occurs when the Display color settings are changed.
            Fired just before DisplayColorChange event
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.CharSetConstants">
            <summary>
            
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CharSetConstants.ANSI">
            <summary>
            ANSI
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CharSetConstants.EBCDIC">
            <summary>
            EBCDIC
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CharSetConstants.APL">
            <summary>
            APL
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CharSetConstants.DBCS">
            <summary>
            DBCS
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CharSetConstants.USASCII">
            <summary>
            USASCII
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CharSetConstants.BASECHARGEN">
            <summary>
            BASECHARGEN
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CharSetConstants.DECSUPGRAPHIC">
            <summary>
            DECSUPGRAPHIC
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CharSetConstants.ISOLATIN">
            <summary>
            ISOLATIN
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CharSetConstants.CURRENTNRC">
            <summary>
            CURRENTNRC
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CharSetConstants.DECSPECGRAPHIC">
            <summary>
            DECSPECGRAPHIC
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CharSetConstants.DECTECHNICAL">
            <summary>
            DECTECHNICAL
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CharSetConstants.GRAPHICLEFT">
            <summary>
            GRAPHICLEFT
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CharSetConstants.GRAPHICRIGHT">
            <summary>
            GRAPHICRIGHT
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CharSetConstants.DOWNLOADEDSOFT">
            <summary>
            DOWNLOADEDSOFT
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CharSetConstants.UPSS">
            <summary>
            UPSS
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CharSetConstants.OEM">
            <summary>
            OEM
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.DisplayColorConstants">
            <summary>
            Contains a value indicating color attribute.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.Background">
            <summary>
            Display background color.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.Blue">
            <summary>
            Color is blue.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.Green">
            <summary>
            Color is green.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.Cyan">
            <summary>
            Color is cyan.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.Red">
            <summary>
            Color is red.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.Magenta">
            <summary>
            Color is magenta.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.Brown">
            <summary>
            Color is brown.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.White">
            <summary>
            Color is white.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.Gray">
            <summary>
            Color is gray.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.LightBlue">
            <summary>
            Color is light blue.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.LightGreen">
            <summary>
            Color is light green.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.LightCyan">
            <summary>
            Color is light cyan.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.LightRed">
            <summary>
            Color is light red.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.LightMagenta">
            <summary>
            Color is light magenta.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.Yellow">
            <summary>
            Color is yellow.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.HighWhite">
            <summary>
            Color is high white.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.Black">
            <summary>
            Color is black.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.UnprotectedNormal">
            <summary>
            Foreground color of unprotected character position of normal intensity.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.UnprotectedIntense">
            <summary>
            Foreground color of unprotected character position of high intensity.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.ProtectedNormal">
            <summary>
            Foreground color of protected character position of normal intensity.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.ProtectedIntense">
            <summary>
            Foreground color of protected character position of high intensity.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.MonochromeNormal">
            <summary>
            Foreground color of character position of normal intensity on monochrome display.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayColorConstants.MonochromeIntense">
            <summary>
            Foreground color of character position of high intensity on monochrome display.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.TransparencyConstants">
            <summary>
            Contains a value indicating the transparency attribute.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransparencyConstants.Transpernt">
            <summary>
            Background is transparent.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransparencyConstants.Opaque">
            <summary>
            Background is opaque.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransparencyConstants.HalfBright">
            <summary>
            Default.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.HostFieldEditConstants">
            <summary>
            The HostFieldEditConstants are used by the Type Property to return the field type.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostFieldEditConstants.AnyCharacter">
            <summary>
            Any Character
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostFieldEditConstants.AlphaOnly">
            <summary>
            Alphabetic Only
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostFieldEditConstants.Alphanumeric">
            <summary>
            Alphanumeric Only
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostFieldEditConstants.UpperOnly">
            <summary>
            Uppercase Characters Only
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostFieldEditConstants.NumericOnly">
            <summary>
            Numeric Characters Only
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostFieldEditConstants.DigitsOnly">
            <summary>
            Digits Only
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostFieldEditConstants.SignedNumeric">
            <summary>
            Signed Numeric
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostFieldEditConstants.ImpliedDecimal">
            <summary>
            Implied Decimal
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostFieldEditConstants.NumericShift">
            <summary>
            Numeric Shift
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostFieldEditConstants.KatakanaShift">
            <summary>
            Katakana Shift
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.ChainTypeConstants">
            <summary>
            ChainType Constants.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.ChainTypeConstants.NoChain">
            <summary>
            No chain
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.ChainTypeConstants.BeginChain">
            <summary>
            Begin chain
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.ChainTypeConstants.EndChain">
            <summary>
            End chain
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.ChainTypeConstants.WholeChain">
            <summary>
            Whole chain
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.ChainTypeConstants.MiddleChain">
            <summary>
            Middle chain
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants">
            <summary>
            HostDataTypeConstants enumeration.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeNoData">
            <summary>
            No data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeOpenDisplay">
            <summary>
            Open Display data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeSysRequest">
            <summary>
            SysRequest data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeSessionGranted">
            <summary>
            Session Granted data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeSessionNotGranted">
            <summary>
            Session Not Granted data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeLine25">
            <summary>
            Line25 data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeLUAddress">
            <summary>
            LUAddress data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeLine25String">
            <summary>
            Line25String data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeBind">
            <summary>
            Bind data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeUnbind">
            <summary>
            Unbind data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeRUSize">
            <summary>
            RU size data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeBid">
            <summary>
            Bid data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeCloseSession">
            <summary>
            Close Session data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeData">
            <summary>
            Data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeReset">
            <summary>
            Reset data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeRTM">
            <summary>
            Response Time Monitor data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeSignal">
            <summary>
            Signal data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeSDT">
            <summary>
            Start Data Traffic data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeClear">
            <summary>
            Clear data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeWctl">
            <summary>
            Wctl data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframeLPrint">
            <summary>
            LPrint data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.MframePID">
            <summary>
            PID data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.AS400NoData">
            <summary>
            No data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.AS400Allocate">
            <summary>
            
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.AS400Confirm">
            <summary>
            
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.AS400Confirmed">
            <summary>
            
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.AS400Deallocate">
            <summary>
            
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.AS400Flush">
            <summary>
            
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.AS400GetAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.AS400PrepareToReceive">
            <summary>
            
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.AS400ReceiveAndWait">
            <summary>
            
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.AS400ReceiveImmediate">
            <summary>
            
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.AS400RequestToSend">
            <summary>
            
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.AS400SendData">
            <summary>
            
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.AS400SendError">
            <summary>
            
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.UNIXNoData">
            <summary>
            No data
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HostDataStreamDataTypeConstants.UNIXData">
            <summary>
            Host data
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.RecordFormatConstants">
            <summary>
            RecordFormat Property Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.RecordFormatConstants.RecordFormatDefault">
            <summary>
            Default record format 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.RecordFormatConstants.RecordFormatFixed">
            <summary>
            Fixed record format 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.RecordFormatConstants.RecordFormatUndefined">
            <summary>
            Undefined record format 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.RecordFormatConstants.RecordFormatVariable">
            <summary>
            Variable record format 
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.DataTypeConstants">
            <summary>
            DataType Property Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DataTypeConstants.DataTypeText">
            <summary>
            Text data type.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DataTypeConstants.DataTypeCompressed">
            <summary>
            Compressed data type.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DataTypeConstants.DataTypeBinary">
            <summary>
            Binary data type.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.DirectionConstants">
            <summary>
            Direction Property Constants.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DirectionConstants.TransferSend">
            <summary>
            Send.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DirectionConstants.TransferReceive">
            <summary>
            Receive.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.EnvironmentConstants">
            <summary>
            HostEnvironment Property Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.EnvironmentConstants.TSO">
            <summary>
            TSO Environment
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.EnvironmentConstants.CMS">
            <summary>
            CMS Environment
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.EnvironmentConstants.CICS">
            <summary>
            CICS Environment
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.PrintConstants">
            <summary>
            PrintOnReceipt Property Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrintConstants.PrintDisabled">
            <summary>
            Do not print file 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrintConstants.PrintTextOnly">
            <summary>
            Print file text only 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrintConstants.PrintControlCodes">
            <summary>
            Print with control codes 
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.StatusLevelConstants">
            <summary>
            StatusLevel Property Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.StatusLevelConstants.StatusAll">
            <summary>
            Display all status messages.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.StatusLevelConstants.StatusTransfer">
            <summary>
            Display transfer dialog only.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.StatusLevelConstants.StatusNone">
            <summary>
            Display no status messages.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.ProtocolConstants">
            <summary>
            TransferProtocol Property Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.ProtocolConstants.ProtocolWSF">
            <summary>
            WSF protocol 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.ProtocolConstants.ProtocolBuffered">
            <summary>
            Buffered protocol 
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.SpaceUnitConstants">
            <summary>
            TsoSpaceUnit Property Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.SpaceUnitConstants.SpaceUnitDefault">
            <summary>
            Default spacing unit
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.SpaceUnitConstants.SpaceUnitAverageBlocks">
            <summary>
            Average blocks spacing unit 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.SpaceUnitConstants.SpaceUnitTracks">
            <summary>
            Tracks spacing unit 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.SpaceUnitConstants.SpaceUnitCylinders">
            <summary>
            Cylinders spacing unit 
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.ConfigurationDialogConstants">
            <summary>
            ConfigurationDialogConstants value indicating the button the pressed to dismiss the dialog.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.ConfigurationDialogConstants.ConfigCancel">
            <summary>
            Cancel button pressed.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.ConfigurationDialogConstants.ConfigAccept">
            <summary>
            OK/Accept button pressed.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.ConfigurationDialogConstants.ConfigTransfer">
            <summary>
            Transfer button pressed.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.TransferCodeConstants">
            <summary>
            TransferCompleted Event Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS00">
            <summary>
            Error in file transfer: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS01">
            <summary>
            file transfer command being processed 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS02">
            <summary>
            Number of bytes of file transferred so far: ===> xxxx 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS03">
            <summary>
            File transfer complete 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS04">
            <summary>
            File transfer complete with records segmented 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS05">
            <summary>
            Personal computer filespec incorrect: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS06">
            <summary>
            Command incomplete: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS07">
            <summary>
            Cannot link to host: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS08">
            <summary>
            Command transmit error: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS09">
            <summary>
            Error reading file from damaged personal computer disk: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS10">
            <summary>
            Host has not responded within timeout period 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS11">
            <summary>
            Lost contact with host: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS12">
            <summary>
            Error writing to damaged or full personal computer disk: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS13">
            <summary>
            Error writing file to host: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS14">
            <summary>
            Error reading file from host: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS15">
            <summary>
            Host storage unavailable: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS16">
            <summary>
            Incorrect request code: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS17">
            <summary>
            Invalid file name: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS18">
            <summary>
            Incorrect option specified: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS19">
            <summary>
            Error handling host file: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS21">
            <summary>
            Not enough personal computer memory available: file transfer cancelled
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS22">
            <summary>
            Host session identifier incorrect: file transfer cancelled  
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS23">
            <summary>
            Activity specified not a host session: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS24">
            <summary>
            Autokey operation in progress: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS25">
            <summary>
            Keyboard inhibited: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS26">
            <summary>
            Unrecoverable system error: file transfer cancelled 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferCodeConstants.TRANS27">
            <summary>
            Communication sequence with host disrupted: file transfer cancelled 
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.TransferResultConstants">
            <summary>
            TransferCompleted Event Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferResultConstants.TransferSuccessful">
            <summary>
            File transfer successful.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferResultConstants.TransferFailed">
            <summary>
            File transfer failed.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferResultConstants.TransferOutOfMemory">
            <summary>
            Out of memory. 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferResultConstants.TransferInvalidParameter">
            <summary>
            Invalid transfer parameter(s). 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferResultConstants.TransferAborted">
            <summary>
            File transfer aborted.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferResultConstants.TransferTimeout">
            <summary>
            File transfer timed-out 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferResultConstants.TransferProtocolError">
            <summary>
            File transfer protocol error 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferResultConstants.TransferDataError">
            <summary>
            File transfer data error 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferResultConstants.TransferFileError">
            <summary>
            File transfer file error 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferResultConstants.TransferHostNotReady">
            <summary>
            Host not ready 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferResultConstants.TransferEngineNotConnected">
            <summary>
            Engine not connected 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.TransferResultConstants.TransferInitFailed">
            <summary>
            Initialization failed.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.BindStateConstants">
            <summary>
            BindState Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.BindStateConstants.Unbound">
            <summary>
            A host connection is established but a host application has not been selected to run.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.BindStateConstants.Bound">
            <summary>
            A host connection is established and a host application is running.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.BindStateConstants.Unowned">
            <summary>
            No host connection.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.StringTranslationConstants">
            <summary>
            The StringTranslationConstants are used by the TranslateString Method.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.StringTranslationConstants.EBCDICToCharacterGenerator">
            <summary>
            Translate from EBCDIC to CharacterGenerator
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.StringTranslationConstants.ANSIToCharacterGenerator">
            <summary>
            Translate from ANSI to CharacterGenerator
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.StringTranslationConstants.CharacterGeneratorToEBCDIC">
            <summary>
            Translate from CharacterGenerator to EBCDIC
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.StringTranslationConstants.CharacterGeneratorToANSI">
            <summary>
            Translate from CharacterGenerator to ANSI
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.StringTranslationConstants.EBCDICToANSI">
            <summary>
            Translate from EBCDIC to ANSI
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.StringTranslationConstants.ANSIToEBCDICTo">
            <summary>
            Translate from ANSI to EBCDIC
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.UnixTerminalIDConstants">
            <summary>
            The TerminalIdConstants are used by the TerminalID Property to return or set the terminal ID.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.UnixTerminalIDConstants.VT52">
            <summary>
            VT52 terminal
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.UnixTerminalIDConstants.VT100">
            <summary>
            VT100 terminal
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.UnixTerminalIDConstants.VT101">
            <summary>
            VT101 terminal
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.UnixTerminalIDConstants.VT102">
            <summary>
            VT102 terminal
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.UnixTerminalIDConstants.VT125">
            <summary>
            VT125 terminal
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.UnixTerminalIDConstants.VT131">
            <summary>
            VT131 terminal
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.UnixTerminalIDConstants.VT220">
            <summary>
            VT220 terminal
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.UnixTerminalIDConstants.VT240">
            <summary>
            VT240 terminal
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.UnixTerminalIDConstants.VT241">
            <summary>
            VT241 terminal
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.UnixTerminalIDConstants.VT320">
            <summary>
            VT320 terminal
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.UnixTerminalIDConstants.VT330">
            <summary>
            VT330 terminal
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.UnixTerminalIDConstants.VT340">
            <summary>
            VT340 terminal
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.UnixTerminalIDConstants.VT420">
            <summary>
            VT420 terminal
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.UnixTerminalIDConstants.Tek401X">
            <summary>
            Tek401X terminal
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.HPTerminalIdConstants">
            <summary>
            HP terminal type enumeration.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HPTerminalIdConstants.HP70092">
            <summary>
            HP70092
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HPTerminalIdConstants.HP70094">
            <summary>
            HP70094
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HPTerminalIdConstants.HP70096">
            <summary>
            HP70096
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HPTerminalIdConstants.HP70098">
            <summary>
            HP70098
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HPTerminalIdConstants.HP2392A">
            <summary>
            HP2392A
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HPTerminalIdConstants.HP2394A">
            <summary>
            HP2394A
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.MacroHostTypeConstants">
            <summary>
            HostType Property Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.MacroHostTypeConstants.NonRumbaHost">
            <summary>
            Non-RUMBA host.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.MacroHostTypeConstants.MainframeHost">
            <summary>
            Mainframe host.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.MacroHostTypeConstants.AS400Host">
            <summary>
            AS/400 host.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.MacroHostTypeConstants.UnixHost">
            <summary>
            UNIX host.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.MacroHostTypeConstants.HPHost">
            <summary>
            HP host
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.MouseButtons">
            <summary>
            MouseButtons Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.MouseButtons.LeftButton">
            <summary>
            Left Mouse Button
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.MouseButtons.RightButton">
            <summary>
            Right Mouse Button
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.MouseButtons.MiddleButton">
            <summary>
            Middle Mouse Button
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.ShiftKeys">
            <summary>
            ShiftKeys Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.ShiftKeys.ShiftKey">
            <summary>
            Shift Key
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.ShiftKeys.CtrlKey">
            <summary>
            Ctrl Key
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.ShiftKeys.AltKey">
            <summary>
            Alt Key
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.SourceType">
            <summary>
            Source Type
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.SourceType.Property">
            <summary>
            Property Source Type
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.SourceType.Method">
            <summary>
            Method Source Type
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.SourceType.Event">
            <summary>
            Event Source Type
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.ClipboardFormat">
            <summary>
            Specifies the clipboard format of the selection data to be copied.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.ClipboardFormat.CFText">
            <summary>
            Text (default).
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.ClipboardFormat.CFBitmap">
            <summary>
            Bitmap.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.ClipboardFormat.CFMetafile">
            <summary>
            Metafile.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.MframeModelConstants">
            <summary>
            MF Model Property Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.MframeModelConstants.MframeModel24x80">
            <summary>
            24x80-character display
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.MframeModelConstants.MframeModel32x80">
            <summary>
            32x80-character display
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.MframeModelConstants.MframeModel43x80">
            <summary>
            43x80-character display
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.MframeModelConstants.MframeModel27x132">
            <summary>
            27x132-character display
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.AS400ModelConstants">
            <summary>
            AS400 Model Property Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.AS400ModelConstants.AS400Mode24x80">
            <summary>
            24x80-character display
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.AS400ModelConstants.AS400Mode27x132">
            <summary>
            27x132-character display
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.CoordinateConversionConstants">
            <summary>
            The CoordinateConversionConstants are used by the ConvertRectangle Method and the ConvertPoint Method.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CoordinateConversionConstants.ScreenToDisplay">
            <summary>
            Convert from Windows screen coordinates to display coordinates
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CoordinateConversionConstants.DisplayToScreen">
            <summary>
            Convert from display coordinates to Windows screen coordinates
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CoordinateConversionConstants.ClientToDisplay">
            <summary>
            UNIX only. Convert from screen coordinates relative to the application holding the control to display coordinates.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.CoordinateConversionConstants.DisplayToClient">
            <summary>
            UNIX only. Convert from display coordinates to screen coordinates relative to the application holding the control.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.PositionCoordinateConstants">
            <summary>
            PositionCoordinate Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PositionCoordinateConstants.XCoordinate">
            <summary>
            X Coordinate Position
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PositionCoordinateConstants.YCoordinate">
            <summary>
            Y Coordinate Position
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.RectangleSideConstants">
            <summary>
            RectangleSide Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.RectangleSideConstants.RectLeft">
            <summary>
            The left column of the rectangle.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.RectangleSideConstants.RectTop">
            <summary>
            The top row of the rectangle.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.RectangleSideConstants.RectRight">
            <summary>
            The right column of the rectangle.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.RectangleSideConstants.RectBottom">
            <summary>
            The bottom row of the rectangle.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.PopupMenuEnabledConstants">
            <summary>
            The Enabled property contains a value identifying the enabled state of the menu item.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PopupMenuEnabledConstants.Enabled">
            <summary>
            Indicates that the menu item is Enabled
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PopupMenuEnabledConstants.Disabled">
            <summary>
            Indicates that the menu item is Disabled
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PopupMenuEnabledConstants.Grayed">
            <summary>
            Indicates that the menu item is Disabled and Grayed
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.WatermarkStyleConstants">
            <summary>
            Possible values for Style property contains a value indicating placement type.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.WatermarkStyleConstants.Tiled">
            <summary>
            Tiles the window with the bitmap image. Tiling displays multiple copies of the image in its original size to fill the entire window.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.WatermarkStyleConstants.Centered">
            <summary>
            Centers the bitmap image in the window. Centering retains the original size of the image.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.WatermarkStyleConstants.FitToWindow">
            <summary>
            Stretches or shrinks the bitmap image to cover the entire window. If the bitmap image is too small in comparison to the window, the stretching may distort its appearance.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.WatermarkStyleConstants.FixedAspect">
            <summary>
            Retains the ratio of height and width while stretching the watermark to cover the window. Part of the bitmap image may not be visible, depending on the difference between the bitmap's dimensions and the window's dimensions.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.WatermarkTextBackgroundConstants">
            <summary>
            WatermarkTextBackground Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.WatermarkTextBackgroundConstants.Opaque">
            <summary>
            Text within the watermark area appears as if it is on top of the bitmap image.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.WatermarkTextBackgroundConstants.Transparent">
            <summary>
            Text within the watermark area appears as if it is part of the bitmap image.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.APIReturnValueConstants">
            <summary>
            API return value constants are used to in the return value of a method to indicate if the method was successful and if not why. 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.APIReturnValueConstants.APIOK">
            <summary>
            Successful
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.APIReturnValueConstants.APIRTSCountReached">
            <summary>
            RTS count reached successfully
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.APIReturnValueConstants.APIParameterError">
            <summary>
            Parameter error
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.APIReturnValueConstants.APIConnectFailed">
            <summary>
            Connection failed
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.APIReturnValueConstants.APIBusy">
            <summary>
            Presentation space is busy
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.APIReturnValueConstants.APInhibited">
            <summary>
            Inhibited or keyboard locked
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.APIReturnValueConstants.APIStringFound">
            <summary>
            String found
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.APIReturnValueConstants.APITimedOut">
            <summary>
            Timed out
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.APIReturnValueConstants.APINotAvailable">
            <summary>
            Unavailable operation
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.APIReturnValueConstants.APISystemError">
            <summary>
            System error
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.APIReturnValueConstants.APINotSupported">
            <summary>
            Function not supported
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.APIReturnValueConstants.APIUnavailable">
            <summary>
            Resource is not available
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.APIReturnValueConstants.APISettleTimeReached">
            <summary>
            Settle time reached
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.DisplayType">
            <summary>
            Type of Display
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayType.MainFrame">
            <summary>
            MainFrame Display
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayType.AS400">
            <summary>
            AS400 Display
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayType.Unix">
            <summary>
            Unix Display
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.DisplayType.HP">
            <summary>
            HP Display
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.ShortNameConstants">
            <summary>
            Short Name Constants
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.HLLAPIReturnCode">
            <summary>
            lists the return codes for EHLLAPI functions supported by RDE API.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIOK">
            <summary>
            Function completed successfully.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APINOTCONNECTED">
            <summary>
            The application is not connected to a RUMBA session, the session ShortName is invalid, or the RUMBA display is not connected to the host. Be sure that ConnectPS was called previously and the ShortName is correct.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIPARAMETERERROR">
            <summary>
            Incorrect Parameters were specified or the length is zero or greater than 128 bytes. Be sure the parameters are correct and are the right length.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIFTXCOMPLETE">
            <summary>
            File transfer completed.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIFTXSEGMENTED">
            <summary>
            File transfer completed and has segmented records.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIBUSY">
            <summary>
            Function successfully completed but the presentation space is busy. The XCLOCK (Mainframe) or II (AS/400) is being displayed on the OIA.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIINHIBITED" -->
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APITRUNCATED">
            <summary>
            Copy was completed, but the data was truncated. Be sure the data string length is correct.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIPOSITIONERROR">
            <summary>
            The specified presentation space (integer) position is invalid. Commonly, a position of zero or a number larger than the size of the presentation space was specified.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APINOTAVAILABLE">
            <summary>
            The specified operation is unavailable. No prerequisite function was issued.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APISYSERROR">
            <summary>
            An unrecoverable system error was encountered.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APINOTSUPPORTED">
            <summary>
            The emulation program does not support the function.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIUNAVAILABLE">
            <summary>
            The specified resource is unavailable. Another EHLLAPI application may have connected to the specified RUMBA session.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIPSENDED">
            <summary>
            The session stopped. The user stopping the session usually causes this.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APINOTENABLED">
            <summary>
            The API task cannot be performed because the RUMBA host control is embedded in another application’s control.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIUNDEFINEDKEY">
            <summary>
            Undefined keystroke combination.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIOIAUPDATE">
            <summary>
            OIA has been updated.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIPSUPDATE">
            <summary>
            Presentation space has been updated
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIBOTHUPDATE">
            <summary>
            Both the OIA and the presentation space were updated
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APINOFIELD">
            <summary>
            No such field was found. The presentation space may be unformatted.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APINOKEYSTROKES">
            <summary>
            No keystrokes are available on the input queue.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIPSCHANGED">
            <summary>
            The OIA or the presentation space was updated.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIFTXABORTED" -->
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIZEROLINEFIELD">
            <summary>
            The field length is 0 bytes
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIKEYOVERFLOW">
            <summary>
            Keystroke Overflow. Keystrokes were lost
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIINVALIDPSID">
            <summary>
            An Invalid ShortName was specified or a system error occurred.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIReturnCode.APIINVALIDRC">
            <summary>
            An invalid ConvertType was specified or character 2 in the data string is not P or R.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.HLLAPIFunctions">
            <summary>
            HLLAPI type of functions.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.CONNECT_PRESENTATION_SPACE">
            <summary>
            Links your program to a specific RUMBA session (presentation space).       
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.DISCONNECT_PRESENTATION_SPACE">
            <summary>
            Disconnects your program from a specific RUMBA session.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.SEND_KEY">
            <summary>
            Sends a string of keystrokes (characters or mnemonics) to the current session.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.WAIT">
            <summary>
            Checks the status of the current session.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.COPY_PRESENTATION_SPACE">
            <summary>
            Copies the entire host screen image (converted to ANSI) for the current session into your program buffer.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.SEARCH_PRESENTATION_SPACE">
            <summary>
            Searches the presentation space for a specified string.
            </summary> 
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.QUERY_CURSOR_LOCATION">
            <summary>
            Returns the position of the cursor in the current presentation space.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.COPY_PRESENTATION_SPACE_TO_STRING">
            <summary>
            Copies all or part of the current presentation space into your program buffer.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.SET_SESSION_PARAMETERS">
            <summary>
            Sets various EHLLAPI session parameters.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.QUERY_SESSIONS">
            <summary>
            Returns the number of connected sessions and information about each session.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.REVERSE">
            <summary>
            Locks the mouse and keyboard to block operator input.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.RELEASE">
            <summary>
            Ends the keyboard and mouse lock initiated by Reserve.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.COPY_OIA">
            <summary>
            Returns the OIA (Operator Information Area or Status Line) data from the currently connected presentation space.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.QUERY_FIELD_ATTRIBUTE">
            <summary>
            Returns the value of the attribute byte of a specified field.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.COPY_STRING_TO_PRESENTATION_SPACE">
            <summary>
            Copies a string of data to the current presentation space.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.PAUSE">
            <summary>
            Waits for a specified length of time.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.QUERY_SYSTEM">
            <summary>
            Provides system information such as EHLLAPI version, level, date, and extended error codes.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.RESET_SYSTEM">
            <summary>
            Disconnects the current RUMBA session and reinitializes the EHLAPI32.DLL. 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.QUERY_SESSION_STATUS">
            <summary>
            Gets information about a specified session.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.START_HOST_INFORMATION">
            <summary>
            Starts the process of determining if the presentation space and/or the OIA have been updated.    
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.QUERY_HOST_UPDATE">
            <summary>
            Returns information on whether or not the host updated the presentation space and/or the OIA since this function was last called.    
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.STOP_HOST_NOTIFICATION">
            <summary>
            Ends Start Host Notification and disables Query Host Update.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.SEARCH_FIELD">
            <summary>
            Looks for a specified string in the target field.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.FIND_FIELD_POSITION">
            <summary>
            Returns the beginning position of a target field.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.FIND_FIELD_LENGTH">
            <summary>
            Returns the length of a target field. 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.COPY_STRING_TO_FIELD">
            <summary>
            Copies a string to the beginning of a target field.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.COPY_FIELD_TO_STRING">
            <summary>
            Copies data from the target field to a string.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.DISPLAY_CURSOR">
            <summary>
            Returns the position of the cursor in the current presentation space.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.DISPLAY_PS">
            <summary>
            Gives the RUMBA session focus. If minimized, the session is restored to its original size and position.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.DELETE_PRESENTATION_SPACE">
            <summary>
            Disconnects and closes a RUMBA session.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.SET_CURSOR">
            <summary>
            Positions the cursor in the currently connected presentation space.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.START_KEYSTROKE_INTERCEPT">
            <summary>
            Enables the application to intercept keystrokes entered into the RUMBA session.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.GET_KEY">
            <summary>
            Intercepts a user keystroke from the session specified by Start Keystroke Intercept.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.POST_INTERCEPT_STATUS">
            <summary>
            Issues a beep if your application rejects a keystroke from Get Key.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.STOP_KEYSTROKE_INTERCEPT">
            <summary>
            Ends keystroke interception and disables Get Key.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.SEND_FILE">
            <summary>
            Transfers a file from the PC to the host.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.RECEIVE_FILE">
            <summary>
            Transfers a file from the host to the PC.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.CONVERT">
            <summary>
            Converts presentation space position values into row/column coordinates and vice versa.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.CONNECT_WINDOW_SERVICES">
            <summary>
            Allows the application to manage the presentation space windows.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.DISCONNECT_WINDOW_SERVICES">
            <summary>
            Disconnects the window services between the EHLLAPI program and the specified RUMBA session.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.QUERY_WINDOW_COORDINATES">
            <summary>
            Returns the coordinates of the RUMBA session window.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.WINDOW_STATUS">
            <summary>
            Queries or changes a RUMBA session window's size, location, or visible state.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.CHANGE_WINDOW_NAME">
            <summary>
            Changes or resets the window name of the RUMBA session.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.RUN_PROFILE">
            <summary>
            Starts a RUMBA session with a specified profile.    
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.SHOW_SESSION">
            <summary>
            Changes the size and visibility of the connected RUMBA session window.       
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.GET_SESSION_HWND">
            <summary>
            Returns the instance handle of the connected session.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.ADVICE_HOST_UPDATE">
            <summary>
            Notifies your application when the presentation space or OIA is updated, or when a host disconnects the RUMBA session after a period of inactivity.       
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.RUN_MACRO">
            <summary>
            Starts a RUMBA macro.       
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.SET_SESSION_PARAMETERS_EXTENDED">
            <summary>
            Extends the options supported by Set Session Parameters.       
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.QUERY_BLOCK_LOCATION">
            <summary>
            Returns the location of a selected block of data in the connected RUMBA session.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.HLLAPIFunctions.COPY_BLOCK_TO_STRING">
            <summary>
            Copies a block of data from the presentation space to a string. The target block may be specified by the PS position or by highlighting the block.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.AvailableHLLAPI">
            <summary>
            Available HLLAPI
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.AvailableHLLAPI.EHLLAPI">
            <summary>
            EHLLAPI
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.AvailableHLLAPI.WinHLLAPI">
            <summary>
            WinHLLAPI
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.PrinterDuplexConstants">
            <summary>
            Duplex Property Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterDuplexConstants.DuplexDefault">
            <summary>
            AS/400: Duplex printing is determined by the host. Mainframe: Duplex printing is determined by the current printer.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterDuplexConstants.DuplexDuplex">
            <summary>
            The setting for double-sided printing duplex.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterDuplexConstants.DuplexTumplex">
            <summary>
            The setting for double-sided printing is tumplex.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.MainframePrinterLPIConstants">
            <summary>
            Mainframe Printer LPI Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.MainframePrinterLPIConstants.MainframePrinterLPI6">
            <summary>
            6 LPI 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.MainframePrinterLPIConstants.MainframePrinterLPI8">
            <summary>
            8 LPI 
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.PrinterOrientationConstants">
            <summary>
            Orientation Property Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterOrientationConstants.OrientDefault">
            <summary>
            AS400: Default orientation is determined by the host. Mainframe: Default orientation is determined by the current printer.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterOrientationConstants.OrientPortrait">
            <summary>
            Prints the document so the short edge of the paper is horizontal.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterOrientationConstants.OrientLandscape">
            <summary>
            Prints the document so the long edge of the paper is horizontal.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.PrinterPaperSizeConstants">
            <summary>
            PaperSize Property Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeDefault">
            <summary>
            PaperSizeDefault
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeLetter">
            <summary>
            PaperSizeLetter
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeLettersmall">
            <summary>
            PaperSizeLettersmall
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeTabloid">
            <summary>
            PaperSizeTabloid
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeLedger">
            <summary>
            PaperSizeLedger
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeLegal">
            <summary>
            PaperSizeLegal
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeStatement">
            <summary>
            PaperSizeStatement
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeExecutive">
            <summary>
            PaperSizeExecutive
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeA3">
            <summary>
            PaperSizeA3
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeA4">
            <summary>
            PaperSizeA4
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeA4Small">
            <summary>
            PaperSizeA4Small
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeA5">
            <summary>
            PaperSizeA5
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeB4">
            <summary>
            PaperSizeB4
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeB5">
            <summary>
            PaperSizeB5
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeFolio">
            <summary>
            PaperSizeFolio
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeQuarto">
            <summary>
            PaperSizeQuarto
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSize10x14">
            <summary>
            PaperSize10x14
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSize11x17">
            <summary>
            PaperSize11x17
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeNote">
            <summary>
            PaperSizeNote
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeEnv_9">
            <summary>
            PaperSizeEnv_9
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeEnv_10">
            <summary>
            PaperSizeEnv_10
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeEnv_11">
            <summary>
            PaperSizeEnv_11
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeEnv_12">
            <summary>
            PaperSizeEnv_12
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeEnv_14">
            <summary>
            PaperSizeEnv_14
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeCSheet">
            <summary>
            PaperSizeCSheet
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeDSheet">
            <summary>
            PaperSizeDSheet
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeESheet">
            <summary>
            PaperSizeESheet
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeEnv_dl">
            <summary>
            PaperSizeEnv_dl
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeEnv_c5">
            <summary>
            PaperSizeEnv_c5
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeEnv_c3">
            <summary>
            PaperSizeEnv_c3
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeEnv_c4">
            <summary>
            PaperSizeEnv_c4
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeEnv_c6">
            <summary>
            PaperSizeEnv_c6
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeEnv_c65">
            <summary>
            PaperSizeEnv_c65
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeEnv_b4">
            <summary>
            PaperSizeEnv_b4
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeEnv_b5">
            <summary>
            PaperSizeEnv_b5
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeEnv_b6">
            <summary>
            PaperSizeEnv_b6
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeEnv_Italy">
            <summary>
            PaperSizeEnv_Italy
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeEnv_Monarch">
            <summary>
            PaperSizeEnv_Monarch
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeEnv_Personal">
            <summary>
            PaperSizeEnv_Personal
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeFanfold_US">
            <summary>
            PaperSizeFanfold_US
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeFanfold_Std_German">
            <summary>
            PaperSizeFanfold_Std_German
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeFanfold_Lgl_German">
            <summary>
            PaperSizeFanfold_Lgl_German
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeIso_b4">
            <summary>
            PaperSizeIso_b4
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeJapanese_Postcard">
            <summary>
            PaperSizeJapanese_Postcard
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSize9x11">
            <summary>
            PaperSize9x11
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSize10x11">
            <summary>
            PaperSize10x11
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSize15x11">
            <summary>
            PaperSize15x11
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeEnv_Invite">
            <summary>
            PaperSizeEnv_Invite
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeReserved_48">
            <summary>
            PaperSizeReserved_48
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeReserved_49">
            <summary>
            PaperSizeReserved_49
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeLetter_extra">
            <summary>
            PaperSizeLetter_extra
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeLegal_extra">
            <summary>
            PaperSizeLegal_extra
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeTabloid_extra">
            <summary>
            PaperSizeTabloid_extra
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeA4_Extra">
            <summary>
            PaperSizeA4_Extra
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeLetter_Transverse">
            <summary>
            PaperSizeLetter_Transverse
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeA4_Transverse">
            <summary>
            PaperSizeA4_Transverse
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeLetter_Extra_Transverse">
            <summary>
            PaperSizeLetter_Extra_Transverse
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeA_Plus">
            <summary>
            PaperSizeA_Plus
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeB_Plus">
            <summary>
            PaperSizeB_Plus
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeLetter_Plus">
            <summary>
            PaperSizeLetter_Plus
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeA4_Plus">
            <summary>
            PaperSizeA4_Plus
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeA5_Transverse">
            <summary>
            PaperSizeA5_Transverse
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeB5_Transverse">
            <summary>
            PaperSizeB5_Transverse
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeA3_Extra">
            <summary>
            PaperSizeA3_Extra
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeA5_Extra">
            <summary>
            PaperSizeA5_Extra
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeB5_Extra">
            <summary>
            PaperSizeB5_Extra
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeA2">
            <summary>
            PaperSizeA2
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeA3_Transverse">
            <summary>
            PaperSizeA3_Transverse
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeA3_Extra_Transverse">
            <summary>
            PaperSizeA3_Extra_Transverse
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSizeConstants.PaperSizeCustom">
            <summary>
            PaperSizeCustom
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.PrinterPaperSourceConstants">
            <summary>
            PaperSourceBin Property Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSourceConstants.PaperSourceDefault">
            <summary>
            AS/400: The source drawer is determined by the host. Mainframe: The source drawer is determined by the current printer. 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSourceConstants.PaperSourceUpper">
            <summary>
            Upper 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSourceConstants.PaperSourceLower">
            <summary>
            Lower 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSourceConstants.PaperSourceMiddle">
            <summary>
            Middle 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSourceConstants.PaperSourceManual">
            <summary>
            Manual Feed 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSourceConstants.PaperSourceEnvelope">
            <summary>
            Envelope 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSourceConstants.PaperSourceEnvManual">
            <summary>
            Manual Envelope 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSourceConstants.PaperSourceAuto">
            <summary>
            Automatic tray selection 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSourceConstants.PaperSourceTractor">
            <summary>
            Tractor Feed 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSourceConstants.PaperSourceSmallFmt">
            <summary>
            Small 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSourceConstants.PaperSourceLargeFmt">
            <summary>
            Large 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSourceConstants.PaperSourceLargeCapacity">
            <summary>
            Large Capacity 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSourceConstants.PaperSourceCassette">
            <summary>
            Cassette 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSourceConstants.PaperSourceFormSource">
            <summary>
            Form Source 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterPaperSourceConstants.PaperSourceCustom">
            <summary>
            Custom 
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.PrinterQualityConstants">
            <summary>
            Quality Property Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterQualityConstants.QualityDefault">
            <summary>
            AS/400: Print quality is determined by the host. Mainframe: Print quality is determined by the current printer. 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterQualityConstants.QualityDraft">
            <summary>
            Draft 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterQualityConstants.QualityLow">
            <summary>
            Low 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterQualityConstants.QualityMedium">
            <summary>
            Medium 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterQualityConstants.QualityHigh">
            <summary>
            High 
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.PrinterCOROrientConstants">
            <summary>
            Printer COR Orient Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterCOROrientConstants.COROrientHost">
            <summary>
            Page orientation for the lower drawer is specified by the host.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterCOROrientConstants.COROrientPortrait">
            <summary>
            Page orientation for the lower drawer is portrait or vertical.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterCOROrientConstants.COROrientLandscape">
            <summary>
            Page orientation for the lower drawer is landscape or horizontal.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterCOROrientConstants.COROrientCOR">
            <summary>
            Page orientation for the lower drawer is calculated to reduce printed output.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.PrinterFormatConstants">
            <summary>
            HorizontalFormat Property Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterFormatConstants.FormatScale">
            <summary>
            Scale
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterFormatConstants.FormatClip">
            <summary>
            Clip
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterFormatConstants.FormatWrap">
            <summary>
            Wrap
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.FormfeedConstants">
            <summary>
            FormFeedMode Property Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.FormfeedConstants.FormfeedStandard">
            <summary>
            Standard formfeed 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.FormfeedConstants.FormfeedSoft">
            <summary>
            Soft formfeed 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.FormfeedConstants.FormfeedInsert">
            <summary>
            Insert Form Feed 
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.PrinterOutputTypeConstants">
            <summary>
            OutputType Property Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterOutputTypeConstants.OutputPrinter">
            <summary>
            The print job will be sent to the printer.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterOutputTypeConstants.OutputMetafile">
            <summary>
            The print job will generate a metafile.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterOutputTypeConstants.OutputFile">
            <summary>
            The print job will be sent to a file.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.PrinterAfterConnectConstants">
            <summary>
            AfterConnect Event Constants
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterAfterConnectConstants.PrinterAfterConnectSuccess">
            <summary>
            Connection was successful 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterAfterConnectConstants.PrinterAfterConnectFailed">
            <summary>
            Connection failed 
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PrinterAfterConnectConstants.PrinterAfterConnectCanceled">
            <summary>
            Connection attempt was canceled 
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDEFields">
            <summary>
            Represents Collection of fields
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFields.Count">
            <summary>
            Gets the number of Fields objects in the collection.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFields.Item(System.Int32)">
            <summary>
            Gets Field object by position.
            </summary>
            <param name="index">The position of a member of the collection.</param>
            <returns>Returns an IRDEField object.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="!:IndexOutOfRangeException"></exception>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDEClipboard">
            <summary>
            IRDEClipboard interface represents all clipboard common properties, methods and events of the displays 
            Mainframe, AS400, HP and Unix
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEClipboard.SelectAll">
            <summary>
            Selects the entire contents of the display for a Clipboard operation.
            </summary>
            <returns>SelectAll returns a true if successful and a false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEClipboard.CopyDataToClipboard(MicroFocus.RDE.Framework.ClipboardFormat)">
            <summary>
            Copies the contents of the screen selection rectangle to the clipboard.
            </summary>
            <param name="clipboardFormat">Specifies the clipboard format of the selection data to be copied.</param>
            <returns>returns true if successful and a false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEClipboard.SetSelectionRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
             SetSelectionRectangle selects an area of the screen.
             </summary>
             <param name="left">The coordinate for the left start column of the rectangle.</param>
             <param name="top">The coordinate for the top start row of the rectangle.</param>
             <param name="right">The coordinate for the right end column of the rectangle.</param>
             <param name="bottom">The coordinate for the bottom row of the rectangle.</param>
             <returns>
             <list type="table">
             <listheader>
             <term>APIReturnValueConstants</term>
             <description>Return value.</description>
             </listheader>
             <item><term>APIOK</term>
             <description>Successful</description></item>
             <item><term>APIParameterError</term>
             <description>Parameter Error/Invalid Function</description></item>
             </list>
            </returns>
             <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
             <exception cref="T:MicroFocus.RDE.Framework.RDEArgumentException"></exception>
             <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEClipboard.AppendDataToClipboard">
            <summary>
            Appends text in the selection rectangle on the host screen to the current contents of the clipboard.
            </summary>
            <returns>returns true if successful and a false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEClipboard.ContinuePasteFromClipboard">
            <summary>
            Continues a paste operation from a previous paste operation when the contents of the clipboard is larger than the available input area.
            </summary>
            <returns>returns true if successful and a false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEClipboard.CutDataToClipboard(MicroFocus.RDE.Framework.ClipboardFormat)">
            <summary>
            Removes data from the screen selection rectangle and places the data in the clipboard.
            </summary>
            <param name="clipboardFormat">Specifies the clipboard format of the selection data to be cut. </param>
            <returns>returns true if successful and false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEClipboard.PasteDataFromClipboard">
            <summary>
            Copies text from the clipboard to the screen at the cursor position, as long as it is an unprotected field.
            </summary>
            <returns>returns true if successful and false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEClipboard.UndoClipboard">
            <summary>
            Restores the contents of the screen to its state prior to the last clipboard operation.
            </summary>
            <returns>returns true if successful and false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEClipboard.GetSelectionRectangle(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Retrieves the left, top, right and bottom coordinates for the current selection rectangle on the screen.
            </summary>
            <param name="left">The coordinate for the left start column of the rectangle.</param>
            <param name="top">The coordinate for the top start row of the rectangle.</param>
            <param name="right">The coordinate for the right end column of the rectangle.</param>
            <param name="bottom">The coordinate for the bottom row of the rectangle.</param>
            <returns>        /// <list type="table">
            <listheader>
            <term>APIReturnValueConstants</term>
            <description>Return value.</description>
            </listheader>
            <item><term>APIOK</term>
            <description>Successful</description></item>
            <item><term>APIParameterError</term>
            <description>Parameter Error/Invalid Function</description></item>
            <item><term>APINOTAVAILABLE</term>
            <description>Unavailable Operation</description></item>
            <item><term>APIUNAVAILABLE</term>
            <description>Resource is Unavailable</description></item>
            </list>
            </returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEClipboard.EndSelection">
            <summary>
            Occurs when the user has finished selecting an area and releases the mouse button.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="T:MicroFocus.RDE.Framework.RDEException">
            <summary>
            Represents general Errors of RDE objects during execution.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.RDEAPIException">
            <summary>
            Represents general Errors of RDE API during execution.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.RDEAPIException.Name">
            <summary>
            Name of method, property  or event which cause the exception.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.RDEAPIException.Type">
            <summary>
            Type of the exception source: method, property or event.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.RDEArgumentException">
            <summary>
            Represents RDE API Errors of wrong arguments values during execution.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.RDEArgumentException.MethodName">
            <summary>
            Method name which throw the exception.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.RDEArgumentException.ParamName">
            <summary>
            Argument name which its wrong value cause the exception.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.RDEApplicationException">
            <summary>
            Represents general Errors of RDE Application during execution.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.RDEPropertyValueException">
            <summary>
            Represents properties values of RDE code during execution.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.RDEPropertyValueException.PropertyName">
            <summary>
            Property name which throw the exception.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDEHostDataStream">
            <summary>
            The DataStream object provides access to the host datastream for the Mainframe display only. 
            It is used in the SendData method of the OBJECTX Display control.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHostDataStream.ChainType">
            <summary>
            Gets or sets the host data stream chain type
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHostDataStream.ChangeDirection">
            <summary>
            Gets or sets a value that indicates whether the change direction indicator is set.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHostDataStream.Data">
            <summary>
            Gets or sets the host datastream.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHostDataStream.DataType">
            <summary>
            Gets or sets the host data type.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEHostDataStream.Length">
            <summary>
            Gets a value that indicates the length of the host data stream.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IUnixDisplay.ClearCommunications">
            <summary>
            ClearCommunications clears the communications link between the Display control and the host.
            </summary>
            <returns>Returns a true if successful and false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IUnixDisplay.HostName">
            <summary>
            Gets or sets a value indicating the name or address of the TCP/IP server.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IUnixDisplay.TcpPort">
            <summary>
            Gets or sets a value indicating the host TCP port number.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IUnixDisplay.AutoFont">
            <summary>
            Gets or sets a value that specifies whether automatic font sizing is enabled.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IUnixDisplay.TerminalID">
            <summary>
            Gets a value that contains an identifier for the host terminal.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IUnixDisplay.PromptOnConnect">
            <summary>
            Gets or sets whether the Connection Configuration dialog should show when connecting to the host.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDEFieldProperties">
            <summary>
            Represents properties of specific field in screen.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFieldProperties.Type">
            <summary>
            Gets a value that indicates the type of characters that can be entered in the field.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFieldProperties.Dup">
            <summary>
            Gets a value that indicates if this field has the Dup attribute.
            A field with the Dup attribute repeats hex 1C from the cursor position to the end of the field when the user presses the Dup key; this shows on the display as an asterisk.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFieldProperties.FieldExitRequired">
            <summary>
            Gets a value that indicates if the user is required to press field exit after entering the last character.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFieldProperties.Protected">
            <summary>
            Gets a value that indicates if the field can accept input.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFieldProperties.ModifiedDataTag">
            <summary>
            Gets a value that indicates if the field has a Modified Data Tag attribute which indicates if the field was modified by the user. 
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFieldProperties.Hidden">
            <summary>
            Gets a value that indicates if the field is hidden.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFieldProperties.AutoEnter">
            <summary>
            Gets a value that indicates if the field is Auto Enter. 
            If true, contents are sent to the host when the user either types a character in the last position of the field or presses the field exit key. 
            The user does not have to press the enter key.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFieldProperties.Enptui">
            <summary>
            Gets a value that indicates if the current field attribute is within an ENPTUI structured field.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFieldProperties.Detectable">
            <summary>
            Gets a value that indicates if this field has the Detectable attribute. 
            A field with the Detectable attribute can be detected by the selector pen or the cursor select key.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFieldProperties.AutoSkip">
            <summary>
            Gets a value that indicates if this field has the Autoskip attribute. A field with the Autoskip attribute causes the cursor to skip over fields that are defined as protected and numeric. 
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFieldProperties.Intense">
            <summary>
            Gets a value that indicates if this field has the Intense attribute. A field with the Intense attribute is displayed with brighter intensity.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFieldProperties.EndColumn">
            <summary>
            Gets a value that indicates the ending column of the field.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFieldProperties.EndRow">
            <summary>
            Gets a value that indicates the ending row of the field.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFieldProperties.Length">
            <summary>
            Gets a value that specifies the length of the field. 
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFieldProperties.StartColumn">
            <summary>
            Gets a value that indicates the column in which the field begins. 
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFieldProperties.StartPosition">
            <summary>
            Gets a value that indicates the starting position of the field as a presentation space position.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFieldProperties.StartRow">
            <summary>
            Gets a value that indicates the row in which the field begins.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFieldProperties.Text">
            <summary>
            Gets the text that appears in the field.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IAS400Display">
            <summary>
            Represents properties, methods and events of AS400 Display.
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IAS400Display.CreateScreenId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a unique screen ID based on a user-selected region in the current display session.
            </summary>
            <param name="left">The coordinate for the left start column of the rectangle.</param>
            <param name="top">The coordinate for the top start row of the rectangle.</param>
            <param name="right">The coordinate for the right end column of the rectangle.</param>
            <param name="bottom">The coordinate for the bottom row of the rectangle.</param>
            <returns>The unique screen ID.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IAS400Display.DeleteScreenId(System.Int32)">
            <summary>
            Deletes the unique screen ID based created by the CreateScreenID method.
            </summary>
            <param name="screenId">The screen ID to delete (must be created by the CreateScreenID method).</param>
            <returns>Returns true if the specified ID is successfully deleted; returns false otherwise.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IAS400Display.GetFieldsAndCharacters(MicroFocus.RDE.Framework.IRDEFieldProperties[]@,MicroFocus.RDE.Framework.IRDECharProperties[]@,System.String[]@)">
            <summary>
            Returns static arrays of fields, characters and texts which represent the current screen.
            </summary>
            <param name="fields">Array of IRDEFieldProperties of all the fields in the current screen.</param>
            <param name="characters">Array of IRDECharProperties of all the characters in the current screen.</param>
            <param name="text">Array of all the texts in the current screen according to fields.</param>
            <returns></returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IAS400Display.StartupModelType">
            <summary>
            Gets or sets the type for the startup display model for the display or the startup printer model for the printer.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IAS400Display.AutoReconnect">
            <summary>
            Gets or sets a value that determines whether the control attempts to reconnect automatically when the connection is broken.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IAS400Display.HostDeviceName">
            <summary>
            Gets or sets the name of the device to which the workstation connects.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IAS400Display.AutoFont">
            <summary>
            Gets or sets a value that specifies whether automatic font sizing is enabled.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IAS400Display.FontTypeFace">
            <summary>
            Gets or sets a string value that specifies the face name of the currently selected display font. 
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IAS400Display.FontPointSize">
            <summary>
            Gets or sets a long integer value that specifies the point size of the currently selected display font.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IAS400Display.AutoResetKeyboard">
            <summary>
            Gets or sets a value indicating whether Auto Reset is enabled.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IAS400Display.KeyboardTypeAhead">
            <summary>
            Gets or sets whether keystrokes are buffered when the Locked property is true.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IAS400Display.TN5250HostsList">
            <summary>
            Gets the interface which represents TN5250 hosts list.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IAS400Display.IRDEExtendedScreenIDs">
            <summary>
            Gets a value of the extended screen IDs held by the session
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IAS400Display.CollectDataOnHostScreenChange">
            <summary>
            Occurs when the display receives data from the host.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IAS400Display.CollectDataOnSendDataEvent">
            <summary>
            Occurs when the Display control is sending data. 
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDEPopupMenuItems">
            <summary>
            Represents Collection of Popup Menu Items.
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEPopupMenuItems.Add(System.Int32)">
            <summary>
            Adds a new PopupMenuItem object to the collection at the index position.
            </summary>
            <param name="index">The position in the collection where the new menu item is inserted. </param>
            <returns>A reference to an IRDEPopupMenuItem object.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEPopupMenuItems.Append(System.Int32,System.String,System.Boolean,System.Boolean,MicroFocus.RDE.Framework.PopupMenuEnabledConstants)">
            <summary>
            Appends a new PopupMenuItem menu item to the end of the collection.
            </summary>
            <param name="menuItemID">The ID for the new item.</param>
            <param name="text">The name of the added menu item including any ampersands for accelerator keys.</param>
            <param name="visible">Indicates whether the menu item is visible.</param>
            <param name="check">Indicates if the menu item is checked.</param>
            <param name="enable">
            <list type="table">
            <listheader>
            <term>PopupMenuEnabledConstants</term>
            <description>Enabled Constants.</description>
            </listheader>
            <item><term>Enabled</term>
            <description>Enabled</description></item>
            <item><term>Disabled</term>
            <description>Disabled</description></item>
            <item><term>Grayed</term>
            <description>Grayed</description></item>
            </list>
            </param>
            <returns>A reference to an IRDEPopupMenuItem object.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEPopupMenuItems.Create(System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,MicroFocus.RDE.Framework.PopupMenuEnabledConstants)">
            <summary>
            Creates a new PopupMenuItem and adds it to the collection at the index position.
            </summary>
            <param name="index">The position in the collection where the created menu item is inserted.</param>
            <param name="menuItemID">The ID for the new item.</param>
            <param name="text">The name of the added menu item including any ampersands for accelerator keys.</param>
            <param name="visible">Indicates whether the menu item is visible.</param>
            <param name="check">Indicates if the menu item is checked.</param>
            <param name="enable">
            <list type="table">
            <listheader>
            <term>PopupMenuEnabledConstants</term>
            <description>Enabled Constants.</description>
            </listheader>
            <item><term>Enabled</term>
            <description>Enabled</description></item>
            <item><term>Disabled</term>
            <description>Disabled</description></item>
            <item><term>Grayed</term>
            <description>Grayed</description></item>
            </list>
            </param>
            <returns>A reference to an IRDEPopupMenuItem object.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEArgumentException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEPopupMenuItems.QueryIndex(System.Int32)">
            <summary>
            Returns the index position for a given menu item ID.
            </summary>
            <param name="menuItemID">The ID of the menu item.</param>
            <returns>The index position of the menu item.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEPopupMenuItems.Remove(System.Int32)">
            <summary>
            Deletes a PopupMenuItem object from the collection.
            </summary>
            <param name="index">The index position of the menu item to remove.</param>
            <exception cref="T:MicroFocus.RDE.Framework.RDEArgumentException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEPopupMenuItems.RemoveAll">
            <summary>
            Deletes all PopupMenuItem objects from the collection.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEPopupMenuItems.ResetToDefaults">
            <summary>
            Returns the PopupMenus collection to the original settings.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEPopupMenuItems.Count">
            <summary>
            Gets the number of Popup Menu objects in the collection.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEPopupMenuItems.Item(System.Int32)">
            <summary>
            Gets a Popup Menu object by position.
            </summary>
            <param name="index">The position of a member of the collection.</param>
            <returns>Returns an IRDEPopupMenuItem object.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDEFTX">
            <summary>
            Represents properties, methods and events of FTX object.
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEFTX.Batch(System.Object@)">
            <summary>
            Executes a batch file transfer.
            </summary>
            <param name="properties">The IStream or IStorage object that stores the transfer properties.</param>
            <returns>Returns true if successful and false if not.</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEFTX.Cancel">
            <summary>
            Cancels the file transfer currently in progress.
            </summary>
            <returns>Returns true if successful and false if not.</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEFTX.ConfigureOptions">
            <summary>
            Opens the file transfer setup configuration dialog box for the user to configure general file transfer options.
            </summary>
            <returns>Returns a ConfigurationDialogConstants value containing the button pressed to dismiss the dialog.</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEFTX.Transfer">
            <summary>
            Transfers a file between the host and the PC. 
            </summary>
            <returns>Returns true if successful and false if not.</returns>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.AdditionalParameters">
            <summary>
            Gets or sets additional file transfer parameters. 
            There are no default AdditionalParameters. The default value is an empty string.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.AnimationsEnabled">
            <summary>
            Gets or sets a value that indicates if animations are enabled during file transfer. 
            The default value is true. 
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.AppendToHostFile">
            <summary>
            Gets or sets a value that indicates if the PC file is appended to the host file (send only). 
            The default value is false.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.AppendToPCFile">
            <summary>
            Gets or sets a value that indicates if the host file is appended to the PC file (receive only). 
            The default value is false. 
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.AutoList">
            <summary>
            Returns or sets a value that indicates if the control automatically lists host files. 
            The default value is true.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.BatchFileName">
            <summary>
            Gets or sets the name of the file transfer batch file. 
            The default BatchFileName is "Default.FTB". 
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.BatchList">
            <summary>
            Gets or sets the file transfer batch list. 
            There is no default BatchList. The default value is an empty string.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.CharacterSet">
            <summary>
            Gets or sets the character set to be used for file transfer. 
            There is no default CharacterSet. The default value is an empty string. 
            If no character set is selected the control will set a default character set. 
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.CicsDataSet">
            <summary>
            Gets or sets the name of the CICS data set to be used in file transfer. 
            There is no default CicsDataSet. The default value is an empty string.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.CmsFileMode">
            <summary>
            Gets or sets the VM/CMS file mode to be used in file transfer. 
            There is no default CmsFileMode. The default value is an empty string. 
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.CmsFileName">
            <summary>
            Gets or sets the name of the VM/CMS file to transfer. 
            There is no default CmsFileName. The default value is an empty string.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.CmsFileType">
            <summary>
            Gets or sets the VM/CMS file type to be used in file transfer. 
            There is no default CmsFileType. The default value is an empty string.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.CmsRecordFormat">
            <summary>
            Gets or sets the VM/CMS record format to be used in file transfer. 
            The default value is RecordFormatVariable.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.CmsRecordLength">
            <summary>
            Gets or sets the length of a VM/CMS record to be used in file transfer. The default value is 0.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.CRLFEnabled">
            <summary>
            Gets or sets a value that indicates if the file transfer is filtered to translate carriage return (CR) and line feed (LF) pairs to/from NL characters. 
            The default value is true.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.DataType">
            <summary>
            Gets or sets the data type of the file to be transferred. The default value is DataTypeText. 
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.Direction">
            <summary>
            Gets or sets the direction (Send or Receive) of the transfer operation. 
            The default value is TransferSend.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.ExplorerEnabled">
            <summary>
            Gets or sets the file transfer enables Explorer-style dialog boxes (Windows 95, Windows 98, and NT 4.0 only). 
            The default value is true. 
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.HostEnvironment">
            <summary>
            Gets or sets the host environment. The default value is EnvironmentTSO.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.PCFileName">
            <summary>
            Gets or sets the name of a PC file for the transfer operation. There is no default PCFileName. 
            The default value is an empty string.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.PrintOnReceipt">
            <summary>
            Gets or sets a value that indicates if the TransferPrintFile event is fired. 
            The default value is PrintDisabled. 
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.ReceiveEnabled">
            <summary>
            Returns or sets a value that indicates if the control allows files to be received from the host. 
            The default value is true.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.ScreenVerification">
            <summary>
            Gets or sets a value that indicates if the file transfer control verifies the host screen before transferring files.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.SendEnabled">
            <summary>
            Gets or sets a value that indicates if the control allows files to be sent to the host. 
            The default value is true.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.StatusLevel">
            <summary>
            Gets or sets the level of status reporting during file transfer. 
            The default value is StatusAll.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.TemplatesEnabled">
            <summary>
            Gets or sets a value that indicates if templates are enabled for the file transfer. 
            The default value is true.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.TransferAllowed">
            <summary>
            Gets or sets whether a Transfer button should be included in the configuration dialog boxes. 
            The default value is true.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.TransferProgram">
            <summary>
            Gets or sets the name of the host file transfer program.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.TransferProtocol">
            <summary>
            
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.TranslateEnabled">
            <summary>
            Gets or sets the file transfer protocol. 
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.TsoBlockSize">
            <summary>
            Gets or sets the MVS/TSO transfer protocol block size. The default value is 0.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.TsoDataSet">
            <summary>
             Gets or sets the name of the MVS/TSO data set to be used in file transfer. 
             There is no default data set. The default value is an empty string.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.TsoMember">
            <summary>
            Gets or sets the MVS/TSO member name for the file transfer. There is no default TsoMember. 
            The default value is an empty string.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.TsoPassword">
            <summary>
            Gets or sets the MVS/TSO password for the file transfer. 
            There is no default TsoPassword. The default value is an empty string.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.TsoRecordFormat">
            <summary>
            Gets or sets the MVS/TSO record format to be used in file transfer. 
            The default TsoRecordFormat is RecordFormatVariable.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.TsoRecordLength">
            <summary>
            Gets or sets the length of an MVS/TSO record to be used in file transfer. 
            The default TsoRecordLength is 0.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.TsoSpaceIncrement">
            <summary>
            Gets or sets the MVS/TSO spacing increment for a file transfer send operation. 
            The default value is 0 (host defined). 
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.TsoSpaceQuantity">
            <summary>
            Gets or sets the MVS/TSO spacing quantity for a file transfer send operation. 
            The default value is 0 (host defined). 
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.TsoSpaceUnit">
            <summary>
            Gets or sets the MVS/TSO spacing unit for a file transfer send operation. 
            The default TsoSpaceUnit is SpaceUnitDefault (host defined). 
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.TsoSpaceValue">
            <summary>
            Gets or sets the MVS/TSO spacing value for a file transfer send operation.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.WSFBlockSize">
            <summary>
            Gets or sets the WSF transfer protocol block size. The default value is 8K.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.SimXferEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEFTX.ParentWindow">
            <summary>
            Gets or sets the window to which the file transfer control should parent all dialog and message boxes. 
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEFTX.BatchCompleted">
            <summary>
            Occurs when a batch file transfer completes.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEFTX.BatchStarted">
            <summary>
            Occurs when a batch file transfer is started. 
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEFTX.ConfigurationCompleted">
            <summary>
            Occurs when the file transfer configuration dialog box is closed. 
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEFTX.ConfigurationStarted">
            <summary>
            Occurs when the file transfer configuration dialog box is opened.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEFTX.DropCompleted">
            <summary>
            Occurs when a drag and drop file transfer is complete. 
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEFTX.DropStarted">
            <summary>
            Occurs when a drag and drop file transfer is started. 
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEFTX.TransferCompleted">
            <summary>
            Occurs when a file transfer operation is complete.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEFTX.TransferStarted">
            <summary>
            Occurs when a file transfer operation is started. 
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEFTX.TransferStatus">
            <summary>
            Indicates the status of a file transfer during processing. 
            The event occurs periodically during the file transfer operation.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDEScreenLayout">
            <summary>
            Represents physical display screen layout / location data
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEScreenLayout.TopLeftPoint">
            <summary>
            Gets screen coordinates of the display's (1,1) position in pixels
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEScreenLayout.CellSize">
            <summary>
            Gets the display's column width and row height in pixels
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.ITN5250HostsList">
            <summary>
            
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.ITN5250HostsList.AddHost(System.String,System.String)">
            <summary>
            This method creates a new host name.
            </summary>
            <param name="name">The name of the new system.</param>
            <param name="ipAddress">The IP address of the new system you want to insert.</param>
            <returns>Returns true if successful, false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.ITN5250HostsList.EditHost(System.String,System.String)">
            <summary>
            This method edits an existing host name.
            </summary>
            <param name="oldName"> The name of the host to edit.</param>
            <param name="ipAddress">The IP address of the host to edit.</param>
            <returns>Returns true if successful, false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.ITN5250HostsList.RemoveHost(System.String)">
            <summary>
            Deletes an existing host name.
            </summary>
            <param name="name">The host name to delete.</param>
            <returns>Returns true if successful, false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.ITN5250HostsList.Count">
            <summary>
            Gets the number of hosts in the collection.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.ITN5250HostsList.SelectedHost">
            <summary>
            Gets or sets the AS/400 host to which the control connects.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.ITN5250HostsList.Item(System.Int32)">
            <summary>
            Get host name by position.
            </summary>
            <param name="index">The position of a member of the collection.</param>
            <returns>Returns host name string</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IHPDisplay.ClearCommunications">
            <summary>
            ClearCommunications clears the communications link between the Display control and the host.
            </summary>
            <returns>Returns a true if successful and false if not.</returns>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IHPDisplay.TerminalID">
            <summary>
            Gets a value that contains an identifier for the host terminal.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IHPDisplay.TcpPort">
            <summary>
            Gets or sets a value indicating the host TCP port number.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IHPDisplay.HostName">
            <summary>
            Gets or sets a value indicating the name or address of the TCP/IP server.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDEKeyboard">
            <summary>
            The Keyboard interface contains properties and methods for configuring the host keyboard.
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEKeyboard.ConfigureKeyboardMap">
            <summary>
            Displays the Keyboard dialog box, which allows the user to view or change the current keyboard configuration.
            </summary>
            <returns>Returns bool value specifying whether the Keyboard Mapper dialog box opened successfully.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEKeyboard.WinKeyDown(System.Int32)">
            <summary>
            Simulates processing of Windows WM_KEYDOWN message the same way as when the display window has input focus.
            </summary>
            <param name="virtKey">Win32 virtual key value.</param>
            <exception cref="T:System.NotSupportedException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEKeyboard.WinKeyUp(System.Int32)">
            <summary>
            Simulates processing of Windows WM_KEYUP message. Must be called, if WinKeyDown is previously called.
            </summary>
            <param name="virtKey">Win32 virtual key value.</param>
            <exception cref="T:System.NotSupportedException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEKeyboard.KeyboardLocked">
            <summary>
            Gets the value that indicates whether keyboard input is inhibited.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEKeyboard.KeyboardMapFile">
            <summary>
            Gets or sets the name of the keyboard map file.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEKeyboard.Language">
            <summary>
            Gets or sets current input language.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEKeyboard.ClickEvent">
            <summary>
            Occurs when the user presses and then releases a mouse button. 
            It is also fired if you place focus on the display control using the mouse.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEKeyboard.DblClick">
            <summary>
            Occurs when the user presses and releases a mouse button over an item, and then presses and releases it again. 
            It is also fired if you place focus on the display control using the mouse.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEKeyboard.KeyDownEvent">
            <summary>
            Occurs when the user presses a key.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEKeyboard.KeyUpEvent">
            <summary>
            Occurs when the user releases a key.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEKeyboard.HostKeyPress">
            <summary>
            Occurs when the user presses a key or when a user releases the Shift, Control, and Alt modifier keys.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEKeyboard.KeyboardLock">
            <summary>
            Occurs when the runtime host keyboard is locked.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEKeyboard.MouseDownEvent">
            <summary>
            Occurs when the user presses a mouse button.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEKeyboard.MouseUpEvent">
            <summary>
            Occurs when the user releases a mouse button.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEKeyboard.MouseMoveEvent">
            <summary>
            Occurs when the user is moving the mouse. 
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDEConnection">
            <summary>
            IConnection interface represents all connection common properties, methods and events of the displays 
            Mainframe, AS400, HP and Unix
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEConnection.Connect">
            <summary>
            Establish a link between the display control and the host using the currently configured and selected interface.
            </summary>
            <returns>If the Connect method is completed successfully returns true.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEConnection.ConnectToDemoHost">
            <summary>
            Connecting to DemoHost of the specific host type if not already connected to real host.
            </summary>
            <returns>If the ConnectToDemoHost method is completed successfully returns true.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEConnection.SynchConnect(System.Boolean,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
             <summary>
             Use this method to establish a connection between the display session and the host using the currently selected interface, 
             and to ensure that connection is complete and that the first host screen is ready to be processed or navigated. 
             SynchConnect Method uses the Connect method to establish the host connection, and also includes host synchronization and verification code.
             </summary>
             <param name="bWaitForEvents">If true the method waits for the number of ReadyToSend events specified in the nWaitCount parameter. 
             When false, this property waits for a "settle time" interval where no HostScreenChange events fire and RTS remains</param>
             <param name="nWaitCount">When bWaitForEvents is true, specifies the number of ReadyToSend events to wait for
             When bWaitForEvents is false, specifies a default "settle time" in milliseconds of 1000 (that is, 10 seconds) if set to any value less than 101.</param>
             <param name="nTimeOut">Specifies the time in milliseconds to wait if no other event causes the function to return. The default value is 10000 milliseconds if 0 is passed as this parameter.</param>
             <param name="szVerString">(Optional, or blank if not used)Specifies a case-sensitive string to search for on the host screen. If an empty string is passed, this parameter is ignored.</param>
             <param name="row">Specifies the row to search for szVerString in the screen buffer.</param>
             <param name="col">Specifies the column to search for szVerString in the screen buffer.</param>
             <returns>
             <list type="table">
             <listheader>
             <term>APIReturnValueConstants</term>
             <description>Return value.</description>
             </listheader>
             <item><term>APIOK</term>
             <description>Successful</description></item>
             <item><term>APIRTSCountReached</term>
             <description>bWaitForEvents is true and the number of ReadyToSend events in nWaitCount was reached, but szVerString was not found.</description></item>
             <item><term>APIStringFound</term>
             <description>szVerString was found at the specified row and col. This occurred before the number of events was reached if bWaitForEvents is true, or before the settle time elapsed if bWaitForEvents is false.</description></item>
             <item><term>APITimedOut</term>
             <description>The function terminated because the timeout interval elapsed.</description></item>
             <item><term>APISettleTimeReached</term>
             <description>The settle time elapsed, bWaitForEvents is false, and szVerString is blank or not found.</description></item>
             </list>
            </returns>
             <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
             <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEConnection.Disconnect">
            <summary>
            Disconnect ends the connection between the display control and the host.
            </summary>
            <returns>Returns a true if successful and false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEConnection.HostInterfaceConfigure">
            <summary>
            Provides access to the Connection Configuration dialog box, 
            which is used to select an interface and supply information about how the interface operates.
            </summary>
            <returns>Returns a true if successful and false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEConnection.HostInterfaceConfigure(System.Boolean,System.Boolean)">
            <summary>
            Provides access to the Connection Configuration dialog box, 
            which is used to select an interface and supply information about how the interface operates.
            </summary>
            <param name="EnableConnectButton">Set true or false to enable the connect button.</param>
            <param name="EnableDisconnectButton">Set true or false to enable the disconnect button.</param>
            <returns>Returns a true if successful and false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEConnection.SecurityString">
            <summary>
            Gets or sets an ASCII string value containing all security settings in the encrypted form.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEConnection.HostConnected">
            <summary>
            Gets a value that indicates if the control is connected to the host.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEConnection.AutoConnect">
            <summary>
            Gets or sets a value that indicates whether the control automatically connects to the host when the control is started.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEConnection.AutoDisconnect">
            <summary>
            Gets or sets a value that indicates whether the control automatically 
            disconnects from the host when the control is unloaded or the application ends.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEConnection.SslAuthentication">
            <summary>
            Returns a value which specifies whether SSL authentication is enabled.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEConnection.SslEncEnabled">
            <summary>
            Returns a value that indicates whether SSL encryption is enabled.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEConnection.ConnectionTimeout">
            <summary>
            Gets or sets the number of seconds the control will attempt to establish a connection with the host before timing out.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEConnection.ConnectionPort">
            <summary>
            Gets or sets a value indicating the host port number.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEConnection.DemoHostScriptFile">
            <summary>
            Gets or sets the DemoHost Interface ScriptFile Property.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEConnection.DemoHostStartingState">
            <summary>
            Gets or sets the DemoHost Interface StartingState Property.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEConnection.DemoHost">
            <summary>
            Returns a value that indicates whether the control is currently configured / connected to DemoHost.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEConnection.AfterConnect">
            <summary>
            Occurs when the connection request is complete.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEConnection.AfterDisconnect">
            <summary>
            Occurs when the disconnect request is complete.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEConnection.BeforeConnect">
            <summary>
            Occurs immediately before the connection request is made.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEConnection.BeforeDisconnect">
            <summary>
            Occurs immediately before a disconnect request is made.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDEForeColors">
            <summary>
            ForeColors collection object contains a set of ForeColor objects.
            The ForeColors collection object is indexed by attribute number.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEForeColors.Count">
            <summary>
            Gets the number of ForeColor objects in the collection.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEForeColors.Item(System.Int32)">
            <summary>
            Retrieves a specific ForeColor object from the collection by index position.
            </summary>
            <param name="index">The position of a member of the collection, which is a number from 0 to one less than the value of the object's Count property.</param>
            <returns>Returns an IRDEForeColor object.</returns>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDEForeColor">
            <summary>
            ForeColor object contains the OLE color value for a screen attribute. 
            The ForeColor object is used to change the color of an attribute.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEForeColor.Color">
            <summary>
            Gets or sets the color of a host screen attribute.
            </summary>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDEPopupMenuItem">
            <summary>
            The Keyboard interface contains properties which describe Popup Menu Item.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEPopupMenuItem.isChecked">
            <summary>
            Gets or sets a value that indicates the checked state of the menu item.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEPopupMenuItem.enabled">
            <summary>
            Gets or sets the enabled state of the menu item.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEPopupMenuItem.menuItemID">
            <summary>
            Gets or sets the ID for the menu item.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEPopupMenuItem.text">
            <summary>
            Gets or sets a value that indicates the menu item text. 
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEPopupMenuItem.visible">
            <summary>
            Gets or sets a value that indicates whether the menu item is visible or hidden.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PopupMenuItemEventArgs.menuItemID">
            <summary>
            menuItemID: ID of the selected menu item.
            xPos: The position of the selected menu item in Windows client coordinates.
            yPos: The position of the selected menu item in Windows client coordinates.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PopupMenuItemEventArgs.xPos">
            <summary>
            menuItemID: ID of the selected menu item.
            xPos: The position of the selected menu item in Windows client coordinates.
            yPos: The position of the selected menu item in Windows client coordinates.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PopupMenuItemEventArgs.yPos">
            <summary>
            menuItemID: ID of the selected menu item.
            xPos: The position of the selected menu item in Windows client coordinates.
            yPos: The position of the selected menu item in Windows client coordinates.
            </summary>
        </member>
        <member name="F:MicroFocus.RDE.Framework.PopupMenuItemEventArgs.handled">
            <summary>
            Indicates whether the container has processed the menu item.
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.PopupMenuItemEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Occurs when a selection has been made on the popup menu.
            </summary>
            <param name="menuItemID">ID of the selected menu item.</param>
            <param name="xPos">The position of the selected menu item in Windows client coordinates.</param>
            <param name="yPos">The position of the selected menu item in Windows client coordinates.</param>
            <param name="handled">Indicates whether the container has processed the menu item.</param>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDEDisplayProp">
            <summary>
            IDisplayProp interface represents all display common properties, methods and events of the displays 
            Mainframe, AS400, HP and Unix
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEDisplayProp.ConvertPoint(System.Int32,System.Int32,MicroFocus.RDE.Framework.CoordinateConversionConstants)">
            <summary>
            Translates the coordinates that identify the position of a point on the screen either from Windows coordinates (x,y) 
            to presentation space coordinates or the opposite direction from presentation space coordinates to Windows coordinates.
            </summary>
            <param name="xPosition">Indicates the horizontal position of the point to be translated.</param>
            <param name="yPosition">Indicates the vertical position of the point to be translated.</param>
            <param name="direction">
            <list type="table">
            <listheader>
            <term>CoordinateConversionConstants</term>
            <description>Possible values</description>
            </listheader>
            <item><term>ScreenToDisplay</term>
            <description>Convert from Windows coordinates to presentation space coordinates.</description></item>
            <item><term>DisplayToScreen</term>
            <description>Convert from presentation space coordinates to Windows coordinates.</description></item>
            </list>
            </param>
            <returns>
            <list type="table">
            <listheader>
            <term>APIReturnValueConstants</term>
            <description>Return value.</description>
            </listheader>
            <item><term>APIOK</term>
            <description>Successful</description></item>
            <item><term>APIPARAMETERERROR</term>
            <description>Parameter Error/Invalid Function.</description></item>
            </list>
            </returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEArgumentException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEDisplayProp.ConvertedPoint(MicroFocus.RDE.Framework.PositionCoordinateConstants)">
            <summary>
            Returns the result of the last successful call to the ConvertPoint method
            </summary>
            <param name="coordinate">
            <list type="table">
            <listheader>
            <term>PositionCoordinateConstants</term>
            <description>Possible values</description>
            </listheader>
            <item><term>XCoordinate</term>
            <description>X Coordinate Position.</description></item>
            <item><term>YCoordinate</term>
            <description>Y Coordinate Position.</description></item>
            </list>
            </param>
            <returns>The requested coordinate position.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEDisplayProp.ConvertRectangle(System.Int32,System.Int32,System.Int32,System.Int32,MicroFocus.RDE.Framework.CoordinateConversionConstants)">
            <summary>
            Use ConvertRectangle with the ConvertedRectangle method to translate the coordinates that identify the position of a screen 
            rectangle either from presentation space coordinates (row, column) to Windows coordinates (x,y), 
            or the other direction from Windows coordinates to presentation space coordinates.
            </summary>
            <param name="left">The coordinate for the left start column of the rectangle.</param>
            <param name="top">The coordinate for the top start row of the rectangle.</param>
            <param name="right">The coordinate for the right end column of the rectangle.</param>
            <param name="bottom">The coordinate for the bottom row of the rectangle.</param>
            <param name="direction">
            <list type="table">
            <listheader>
            <term>CoordinateConversionConstants</term>
            <description>Possible values</description>
            </listheader>
            <item><term>ScreenToDisplay</term>
            <description>Convert from Windows coordinates to presentation space coordinates.</description></item>
            <item><term>DisplayToScreen</term>
            <description>Convert from presentation space coordinates to Windows coordinates.</description></item>
            </list>
            </param>
            <returns>
            <list type="table">
            <listheader>
            <term>APIReturnValueConstants</term>
            <description>Return value.</description>
            </listheader>
            <item><term>APIOK</term>
            <description>Successful</description></item>
            <item><term>APIPARAMETERERROR</term>
            <description>Parameter Error/Invalid Function.</description></item>
            </list>
            </returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEArgumentException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEDisplayProp.ConvertedRectangle(MicroFocus.RDE.Framework.RectangleSideConstants)">
            <summary>
            Gets the results of the last successful call to the ConvertRectangle method and returns the converted rectangle coordinate requested.
            </summary>
            <param name="sideEnum">
            <list type="table">
            <listheader>
            <term>RectangleSideConstants</term>
            <description>Possible values</description>
            </listheader>
            <item><term>RectLeft</term>
            <description>Rectangle Left.</description></item>
            <item><term>RectTop</term>
            <description>Rectangle Top.</description></item>
            <item><term>RectRight</term>
            <description>Rectangle Right.</description></item>
            <item><term>RectBottom</term>
            <description>Rectangle Bottom.</description></item>
            </list>
            </param>
            <returns>A value indicating the converted rectangle coordinate requested.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEDisplayProp.ConfigureDisplay">
            <summary>
            ConfigureDisplay opens the Display Options dialog box.
            </summary>
            <returns>ConfigureDisplay only returns true</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEDisplayProp.SetFocus">
            <summary>
            SetFocus sets the focus to the control.
            </summary>
            <returns>Returns true if successful, false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEDisplayProp.AboutBox">
            <summary>
            Displays the AboutBox for version information.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEDisplayProp.GetScreen(System.Int32,System.Int32,System.Int32)">
            <summary>
            Retrieves data and character attribute information from a specified row/column position.
            </summary>
            <param name="row">Specifies the row starting position of the screen</param>
            <param name="column">Specifies the column starting position of the screen</param>
            <param name="length">Specifies the number of bytes to get</param>
            <returns>returns the string containing the screen information.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEArgumentException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEDisplayProp.GetScreen(System.Int32,System.Int32,System.Int32,System.Object,System.Object)">
            <summary>
            Retrieves data and character attribute information from a specified row/column position.
            </summary>
            <param name="row">Specifies the row starting position of the screen</param>
            <param name="column">Specifies the column starting position of the screen</param>
            <param name="length">Specifies the number of bytes to get</param>
            <param name="vTranslateCharacter">true to translate from the host character set (EBCDIC) to the PC character set (ANSI).</param>
            <param name="vConvertAttributesToSpaces">true to translate attribute bytes to spaces and false to leave them untranslated.</param>
            <returns>returns the string containing the screen information.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEArgumentException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEDisplayProp.GetScreenAttributes(MicroFocus.RDE.Framework.IRDEAttribute[]@,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns attribute information for one or more space positions on a screen.
            </summary>
            <param name="lpAttributes">A pointer to the safe array that is passed in and used to return the attribute information.</param>
            <param name="row">Specifies the row starting position of the screen at which GetScreenAttributes is to begin the retrieval.</param>
            <param name="column">Specifies the column starting position of the screen at which GetScreenAttributes is to begin the retrieval.</param>
            <param name="length">Specifies the number of attributes to get.</param>
            <returns>GetScreenAttributes returns an API-prefix code</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEArgumentException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEDisplayProp.PutScreen(System.String,System.Int32,System.Int32)">
            <summary>
            PutScreen sends data to the display screen and displays it at a specified row and column location.
            </summary>
            <param name="ps">Location of the data to send.</param>
            <param name="row">The screen row starting position at which to place the data.</param>
            <param name="column">The screen column starting position at which to place the data.</param>
            <returns></returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEArgumentException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEDisplayProp.PutScreen(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            PutScreen sends data to the display screen and displays it at a specified row and column location.
            </summary>
            <param name="ps">Location of the data to send.</param>
            <param name="row">The screen row starting position at which to place the data.</param>
            <param name="column">The screen column starting position at which to place the data.</param>
            <param name="length">The number of characters to send to the host application.</param>
            <returns></returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEArgumentException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEDisplayProp.ConfigureWatermark">
            <summary>
            Opens the watermark configuration dialog box.
            </summary>
            <returns>returns true if successful and false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEDisplayProp.IsAttribute(System.Int32,System.Int32)">
            <summary>
            Specifies whether the current screen position is an attribute byte.
            </summary>
            <param name="row">The screen position to check for an attribute byte. The screen position starts at (1,1).</param>
            <param name="column">The screen position to check for an attribute byte. The screen position starts at (1,1).</param>
            <returns>returns true if successful and false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEArgumentException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEDisplayProp.GetColor(MicroFocus.RDE.Framework.DisplayColorConstants)">
            <summary>
            Returns corresponding color according to the current display color mapping.
            </summary>
            <param name="colorAttribute">Logical color constant for which the real color mapping is to be returned.</param>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplayProp.IRDEAttributes">
            <summary>
            Gets common properties of current screen attributes interface.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplayProp.IRDEFields">
            <summary>
            Gets common properties of current screen fields interface.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplayProp.IRDEPopupMenuItems">
            <summary>
            Gets common properties of Popup Menu Items interface.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplayProp.CharacterSetID">
            <summary>
            Gets a value that identifies the character set translation table used by the Display control.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplayProp.SupportsStructuredFields">
            <summary>
            Gets a value that indicates if the host supports structured field decoding.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplayProp.WatermarkName">
            <summary>
            Gets or sets the name of the file used to display a watermark. 
            Only bitmap files can be used to create a watermark.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplayProp.WatermarkVisible">
            <summary>
            Gets or sets if a watermark is visible.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplayProp.WatermarkStyle">
            <summary>
            Gets or sets the type of placement for the watermark.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplayProp.TextBackground">
            <summary>
            Gets or sets how text displays within the watermark area.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplayProp.CursorRow">
            <summary>
            Gets or sets the row position of the cursor on the screen.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplayProp.CursorColumn">
            <summary>
            Gets or sets the column position of the cursor on the screen.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplayProp.Rows">
            <summary>
            Gets a value that indicates the number of rows on the current screen.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplayProp.Columns">
            <summary>
            Gets a value indicating the number of columns on the current display screen.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplayProp.BackColor">
            <summary>
            Gets or sets the background color of the display control.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplayProp.IRDEScreenLayout">
            <summary>
            Gets physical display screen layout / location data
            </summary>
            <exception cref="T:System.NotSupportedException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEDisplayProp.ForeColors">
            <summary>
            Returns a ForeColors collection object, which is a set of ForeColor objects for the current host screen.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEDisplayProp.ResizeEvent">
            <summary>
            Occurs when the Display control is resized.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEDisplayProp.CursorMove">
            <summary>
            
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEDisplayProp.HostScreenChange">
            <summary>
            
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEDisplayProp.LocalScreenChange">
            <summary>
            
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEDisplayProp.PopupMenuItem">
            <summary>
            Occurs when a selection has been made on the popup menu. 
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEDisplayProp.DisplayColorChange">
            <summary>
            Occurs when the display color settings have changed. 
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDEAttribute">
            <summary>
            Represents properties of specific position in screen
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEAttribute.AutoEnter">
            <summary>
            Gets the value that indicates if the character location is Auto Enter.  
            If true, contents are sent to the host when the user either types a character in the last position or presses the field exit key. 
            The user does not have to press the enter key.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"/>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"/>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEAttribute.Autoskip">
            <summary>
            Gets the value that indicates if this character location has the Autoskip attribute. 
            A field with the Autoskip attribute causes the cursor to skip over fields that are defined as protected and numeric.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"/>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"/>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEAttribute.BackGroundColor">
            <summary>
            Gets the background color of the character location.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"/>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"/>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEAttribute.ForeGroundColor">
            <summary>
            Gets the foreground color of the character location.
            </summary>
            <value></value>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"/>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"/>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEAttribute.Blinking">
            <summary>
            Gets the value that indicates if the character location displays as blinking.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"/>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"/>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEAttribute.Bold">
            <summary>
            Gets the value that indicates if text in the character location displays as bold
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"/>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"/>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEAttribute.Column">
            <summary>
            Gets a value indicating to which column the current attribute applies.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"/>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"/>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEAttribute.ColumnSeparator">
            <summary>
            Gets a value that indicates if the screen position is a column separator.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"/>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"/>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEAttribute.Detectable">
            <summary>
            Gets a value that indicates if this screen position has the Detectable attribute. 
            A field with the Detectable attribute can be detected by the selector pen or the cursor select key.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"/>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"/>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEAttribute.Hidden">
            <summary>
            Gets a value that indicates if the screen position is hidden.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"/>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"/>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEAttribute.Protected">
            <summary>
            Gets a value that indicates if the field can accept input.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"/>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"/>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEAttribute.Row">
            <summary>
            Gets a value indicating to which row the current attribute applies. 
            It must be used in conjuction with the Column property to define a position since an attribute does not apply to a whole row.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"/>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"/>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEAttribute.Underlined">
            <summary>
            Gets a value that indicates if the text in the location displays as underlined.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"/>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"/>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEAttribute.ReverseVideo">
            <summary>
            Gets a value that indicates whether the screen position displays in reverse video with the background and foreground colors reversed.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"/>
            <exception cref="T:MicroFocus.RDE.Framework.RDEPropertyValueException"/>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDESession">
            <summary>
            IRDESession interface represents all session common properties, methods and events of the displays 
            Mainframe, AS400, HP and Unix
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDESession.SendKeys(System.String)">
            <summary>
            Sends AID keys and data to the host application.
            </summary>
            <param name="keys">
            A string that contains keystrokes and mnemonics to send.
            </param>
            <returns>
            <list type="table">
            <listheader>
            <term>APIReturnValueConstants</term>
            <description>Return value.</description>
            </listheader>
            <item><term>APIOK</term>
            <description>Successful</description></item>
            <item><term>APIParameterError</term>
            <description>Parameter Error/Invalid Function</description></item>
            </list>
            </returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDESession.SynchSendKeys(System.String,System.Boolean,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Use this method to navigate to a host destination screen.
            </summary>
            <param name="keys">String containing the keystrokes to send to the host at the current cursor location. </param>
            <param name="bWaitForEvents">Specifies which host synchronization mode to use</param>
            <param name="nWaitCount">When bWaitForEvents is TRUE, specifies the number of ReadyToSend(TRUE) events to wait for.</param>
            <param name="nTimeOut">Specifies the time in milliseconds to wait if no other event causes the function to return. </param>
            <param name="szVerString"></param>
            <param name="row">Specifies the row to search for szVerString in the screen buffer.</param>
            <param name="col">Specifies the column to search for szVerString in the screen buffer.</param>
            <returns>
            <list type="table">
            <listheader>
            <term>APIReturnValueConstants</term>
            <description>Return value.</description>
            </listheader>
            <item><term>APIOK</term>
            <description>Successful</description></item>
            <item><term>APIRTSCountReached</term>
            <description>bWaitForEvents is true and the number of ReadyToSend events in nWaitCount was reached, but szVerString was not found.</description></item>
            <item><term>APInhibited</term>
            <description>Inhibited or keyboard locked.</description></item>
            <item><term>APIStringFound</term>
            <description>szVerString was found at the specified row and col. This occurred before the number of events was reached if bWaitForEvents is true, or before the settle time elapsed if bWaitForEvents is false.</description></item>
            <item><term>APITimedOut</term>
            <description>The function terminated because the timeout interval elapsed.</description></item>
            <item><term>APISettleTimeReached</term>
            <description>The settle time elapsed, bWaitForEvents is false, and szVerString is blank or not found.</description></item>
            </list>
            </returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEArgumentException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDESession.SendData(MicroFocus.RDE.Framework.RDEHostDataStream)">
            <summary>
            SendData sends data to the host.
            </summary>
            <param name="hostDataStreamObject">A reference to the ObjectXHostDataStream object.</param>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDESession.ReleaseScreen">
            <summary>
            ReleaseScreen turns off the ReserveScreen method which prevents user input to screens.
            </summary>
            <returns>Returns true if successful, false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDESession.ReserveScreen">
            <summary>
            ReserveScreen prevents user input to the screen. Unlock the user input with the ReleaseScreen method. 
            </summary>
            <returns>Returns true if successful, false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDESession.ScreenId">
            <summary>
            Gets a value that is a unique identifier for the current host screen.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDESession.ReadyToSend">
            <summary>
            Gets a value that indicates whether the host is ready to accept data.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
            <exception cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDESession.SendDataEvent">
            <summary>
            Occurs when the Display control is sending data.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDESession.PlayMacro">
            <summary>
            Occurs when a user presses the key sequence to launch a keyboard macro.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDESession.ReadyToSendEvent">
            <summary>
            Occurs when the host is ready to process data from the control.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="T:MicroFocus.RDE.Framework.ITN3270HostsList">
            <summary>
            
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.ITN3270HostsList.AddHost(System.String)">
            <summary>
            Adds a host name to the destination list.
            </summary>
            <param name="name">The name of the destination to add.</param>
            <returns>Returns true if successful, false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.ITN3270HostsList.EditHost(System.String,System.String)">
            <summary>
            Changes a name in the destination list.
            </summary>
            <param name="oldName">The current name of the destination.</param>
            <param name="newName">The new destination name.</param>
            <returns>Returns true if successful, false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.ITN3270HostsList.MoveHostDown(System.String)">
            <summary>
            Moves a destination name lower in priority on the destination list using an index.
            </summary>
            <param name="name">The name of the destination to move to a lower priority.</param>
            <returns>Returns true if successful, false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.ITN3270HostsList.MoveHostUp(System.String)">
            <summary>
            Moves a destination name to a higher priority on the destination list using an index.
            </summary>
            <param name="name">The name of the destination name to move to a higher priority.</param>
            <returns>Returns true if successful, false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.ITN3270HostsList.RemoveHost(System.String)">
            <summary>
            Removes a name from the destination list.
            </summary>
            <param name="name">The name of the host connection to delete.</param>
            <returns>Returns true if successful, false if not.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="M:MicroFocus.RDE.Framework.ITN3270HostsList.DestinationHostName(System.Int32)">
            <summary>
            Gets the destination name from the destination list using the index.
            </summary>
            <param name="index">The index value for the destination name.</param>
            <returns>The name of the connection in the destination list.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEArgumentException"></exception>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.ITN3270HostsList.Count">
            <summary>
            Gets the number of hosts in the collection.
            </summary>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="P:MicroFocus.RDE.Framework.ITN3270HostsList.Item(System.Int32)">
            <summary>
            Get host name by position.
            </summary>
            <param name="index">The position of a member of the collection.</param>
            <returns>Returns host name string.</returns>
            <exception cref="T:MicroFocus.RDE.Framework.RDEAPIException"></exception>
        </member>
        <member name="T:MicroFocus.RDE.Framework.IRDEMacro">
            <summary>
            Represents properties, methods and events of Macro object.
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEMacro.BeginRecord">
            <summary>
            Starts a macro record session to allow the application user to record a macro.
            </summary>
            <returns>Specifies true if the OBJECTX Macro control has begun a record session.</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEMacro.CancelPlayback">
            <summary>
            Stops play back of the current macro. 
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEMacro.PlayMacro(System.String)">
            <summary>
            Runs the specified macro. If no macro is specified, the OBJECTX Macro control presents a selection dialog box.
            </summary>
            <param name="macroName">Specifies the name of the macro.</param>
            <returns>Specifies true if the OBJECTX Macro control plays the macro.</returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEMacro.EndRecordAndSave(System.String)">
            <summary>
            Ends a macro record session and save to file.
            </summary>
            <param name="macroName">Specifies the name of the macro.</param>
            <returns>Specifies true if the OBJECTX Macro control has ended a record session. </returns>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEMacro.CancelRecord">
            <summary>
            Stops record of the current macro.
            </summary>
        </member>
        <member name="M:MicroFocus.RDE.Framework.IRDEMacro.EditMacro(System.String)">
            <summary>
            Open Edit Macro dialog with the macro full path.
            </summary>
            <param name="macroPath"></param>
            <returns></returns>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEMacro.MacrosFolder">
            <summary>
            Gets or sets the path from which the control searches for macro files.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEMacro.AutoMacro">
            <summary>
            Gets or sets the macro that the OBJECTX Macro control runs when a host session begins.
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEMacro.DisconnectMacro">
            <summary>
            Gets or sets the name of the macro to play when the host session is disconnected
            </summary>
        </member>
        <member name="P:MicroFocus.RDE.Framework.IRDEMacro.ShowProgress">
            <summary>
            Gets or sets a value indicating whether the macro status indicator is displayed during macro playback or record. 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:MicroFocus.RDE.Framework.IRDEMacro.EventsPolicy" -->
        <member name="E:MicroFocus.RDE.Framework.IRDEMacro.MacroPlayBegin">
            <summary>
            Occurs when the OBJECTX Macro control has begun to play a macro. 
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEMacro.MacroPlayEnd">
            <summary>
            Occurs when the OBJECTX Macro control has stopped playing the current macro.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEMacro.MacroRecordBegin">
            <summary>
            Occurs when the OBJECTX Macro control has begun to record a macro.
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEMacro.MacroRecordEnd">
            <summary>
            Occurs when the OBJECTX Macro control has stopped recording the current macro. 
            </summary>
        </member>
        <member name="E:MicroFocus.RDE.Framework.IRDEMacro.MacroStatus">
            <summary>
            Notifies the container of the status for each command played or recorded. 
            </summary>
        </member>
    </members>
</doc>
